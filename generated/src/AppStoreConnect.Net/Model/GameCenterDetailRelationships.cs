/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// GameCenterDetailRelationships
    /// </summary>
    [DataContract(Name = "GameCenterDetail_relationships")]
    public partial class GameCenterDetailRelationships : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GameCenterDetailRelationships" /> class.
        /// </summary>
        /// <param name="app">app.</param>
        /// <param name="gameCenterAppVersions">gameCenterAppVersions.</param>
        /// <param name="gameCenterGroup">gameCenterGroup.</param>
        /// <param name="gameCenterLeaderboards">gameCenterLeaderboards.</param>
        /// <param name="gameCenterLeaderboardSets">gameCenterLeaderboardSets.</param>
        /// <param name="gameCenterAchievements">gameCenterAchievements.</param>
        /// <param name="defaultLeaderboard">defaultLeaderboard.</param>
        /// <param name="defaultGroupLeaderboard">defaultGroupLeaderboard.</param>
        /// <param name="achievementReleases">achievementReleases.</param>
        /// <param name="leaderboardReleases">leaderboardReleases.</param>
        /// <param name="leaderboardSetReleases">leaderboardSetReleases.</param>
        public GameCenterDetailRelationships(AlternativeDistributionKeyCreateRequestDataRelationshipsApp app = default(AlternativeDistributionKeyCreateRequestDataRelationshipsApp), GameCenterAppVersionRelationshipsCompatibilityVersions gameCenterAppVersions = default(GameCenterAppVersionRelationshipsCompatibilityVersions), GameCenterDetailRelationshipsGameCenterGroup gameCenterGroup = default(GameCenterDetailRelationshipsGameCenterGroup), GameCenterDetailRelationshipsGameCenterLeaderboards gameCenterLeaderboards = default(GameCenterDetailRelationshipsGameCenterLeaderboards), GameCenterDetailRelationshipsGameCenterLeaderboardSets gameCenterLeaderboardSets = default(GameCenterDetailRelationshipsGameCenterLeaderboardSets), GameCenterDetailRelationshipsGameCenterAchievements gameCenterAchievements = default(GameCenterDetailRelationshipsGameCenterAchievements), GameCenterDetailRelationshipsDefaultLeaderboard defaultLeaderboard = default(GameCenterDetailRelationshipsDefaultLeaderboard), GameCenterDetailRelationshipsDefaultLeaderboard defaultGroupLeaderboard = default(GameCenterDetailRelationshipsDefaultLeaderboard), GameCenterAchievementRelationshipsReleases achievementReleases = default(GameCenterAchievementRelationshipsReleases), GameCenterDetailRelationshipsLeaderboardReleases leaderboardReleases = default(GameCenterDetailRelationshipsLeaderboardReleases), GameCenterDetailRelationshipsLeaderboardSetReleases leaderboardSetReleases = default(GameCenterDetailRelationshipsLeaderboardSetReleases))
        {
            this.App = app;
            this.GameCenterAppVersions = gameCenterAppVersions;
            this.GameCenterGroup = gameCenterGroup;
            this.GameCenterLeaderboards = gameCenterLeaderboards;
            this.GameCenterLeaderboardSets = gameCenterLeaderboardSets;
            this.GameCenterAchievements = gameCenterAchievements;
            this.DefaultLeaderboard = defaultLeaderboard;
            this.DefaultGroupLeaderboard = defaultGroupLeaderboard;
            this.AchievementReleases = achievementReleases;
            this.LeaderboardReleases = leaderboardReleases;
            this.LeaderboardSetReleases = leaderboardSetReleases;
        }

        /// <summary>
        /// Gets or Sets App
        /// </summary>
        [DataMember(Name = "app", EmitDefaultValue = false)]
        public AlternativeDistributionKeyCreateRequestDataRelationshipsApp App { get; set; }

        /// <summary>
        /// Gets or Sets GameCenterAppVersions
        /// </summary>
        [DataMember(Name = "gameCenterAppVersions", EmitDefaultValue = false)]
        public GameCenterAppVersionRelationshipsCompatibilityVersions GameCenterAppVersions { get; set; }

        /// <summary>
        /// Gets or Sets GameCenterGroup
        /// </summary>
        [DataMember(Name = "gameCenterGroup", EmitDefaultValue = false)]
        public GameCenterDetailRelationshipsGameCenterGroup GameCenterGroup { get; set; }

        /// <summary>
        /// Gets or Sets GameCenterLeaderboards
        /// </summary>
        [DataMember(Name = "gameCenterLeaderboards", EmitDefaultValue = false)]
        public GameCenterDetailRelationshipsGameCenterLeaderboards GameCenterLeaderboards { get; set; }

        /// <summary>
        /// Gets or Sets GameCenterLeaderboardSets
        /// </summary>
        [DataMember(Name = "gameCenterLeaderboardSets", EmitDefaultValue = false)]
        public GameCenterDetailRelationshipsGameCenterLeaderboardSets GameCenterLeaderboardSets { get; set; }

        /// <summary>
        /// Gets or Sets GameCenterAchievements
        /// </summary>
        [DataMember(Name = "gameCenterAchievements", EmitDefaultValue = false)]
        public GameCenterDetailRelationshipsGameCenterAchievements GameCenterAchievements { get; set; }

        /// <summary>
        /// Gets or Sets DefaultLeaderboard
        /// </summary>
        [DataMember(Name = "defaultLeaderboard", EmitDefaultValue = false)]
        public GameCenterDetailRelationshipsDefaultLeaderboard DefaultLeaderboard { get; set; }

        /// <summary>
        /// Gets or Sets DefaultGroupLeaderboard
        /// </summary>
        [DataMember(Name = "defaultGroupLeaderboard", EmitDefaultValue = false)]
        public GameCenterDetailRelationshipsDefaultLeaderboard DefaultGroupLeaderboard { get; set; }

        /// <summary>
        /// Gets or Sets AchievementReleases
        /// </summary>
        [DataMember(Name = "achievementReleases", EmitDefaultValue = false)]
        public GameCenterAchievementRelationshipsReleases AchievementReleases { get; set; }

        /// <summary>
        /// Gets or Sets LeaderboardReleases
        /// </summary>
        [DataMember(Name = "leaderboardReleases", EmitDefaultValue = false)]
        public GameCenterDetailRelationshipsLeaderboardReleases LeaderboardReleases { get; set; }

        /// <summary>
        /// Gets or Sets LeaderboardSetReleases
        /// </summary>
        [DataMember(Name = "leaderboardSetReleases", EmitDefaultValue = false)]
        public GameCenterDetailRelationshipsLeaderboardSetReleases LeaderboardSetReleases { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GameCenterDetailRelationships {\n");
            sb.Append("  App: ").Append(App).Append("\n");
            sb.Append("  GameCenterAppVersions: ").Append(GameCenterAppVersions).Append("\n");
            sb.Append("  GameCenterGroup: ").Append(GameCenterGroup).Append("\n");
            sb.Append("  GameCenterLeaderboards: ").Append(GameCenterLeaderboards).Append("\n");
            sb.Append("  GameCenterLeaderboardSets: ").Append(GameCenterLeaderboardSets).Append("\n");
            sb.Append("  GameCenterAchievements: ").Append(GameCenterAchievements).Append("\n");
            sb.Append("  DefaultLeaderboard: ").Append(DefaultLeaderboard).Append("\n");
            sb.Append("  DefaultGroupLeaderboard: ").Append(DefaultGroupLeaderboard).Append("\n");
            sb.Append("  AchievementReleases: ").Append(AchievementReleases).Append("\n");
            sb.Append("  LeaderboardReleases: ").Append(LeaderboardReleases).Append("\n");
            sb.Append("  LeaderboardSetReleases: ").Append(LeaderboardSetReleases).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
