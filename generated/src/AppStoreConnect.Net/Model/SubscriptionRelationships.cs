/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// SubscriptionRelationships
    /// </summary>
    [DataContract(Name = "Subscription_relationships")]
    public partial class SubscriptionRelationships : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SubscriptionRelationships" /> class.
        /// </summary>
        /// <param name="subscriptionLocalizations">subscriptionLocalizations.</param>
        /// <param name="appStoreReviewScreenshot">appStoreReviewScreenshot.</param>
        /// <param name="group">group.</param>
        /// <param name="introductoryOffers">introductoryOffers.</param>
        /// <param name="promotionalOffers">promotionalOffers.</param>
        /// <param name="offerCodes">offerCodes.</param>
        /// <param name="prices">prices.</param>
        /// <param name="pricePoints">pricePoints.</param>
        /// <param name="promotedPurchase">promotedPurchase.</param>
        /// <param name="subscriptionAvailability">subscriptionAvailability.</param>
        /// <param name="winBackOffers">winBackOffers.</param>
        /// <param name="images">images.</param>
        public SubscriptionRelationships(SubscriptionRelationshipsSubscriptionLocalizations subscriptionLocalizations = default(SubscriptionRelationshipsSubscriptionLocalizations), SubscriptionRelationshipsAppStoreReviewScreenshot appStoreReviewScreenshot = default(SubscriptionRelationshipsAppStoreReviewScreenshot), SubscriptionGroupLocalizationRelationshipsSubscriptionGroup group = default(SubscriptionGroupLocalizationRelationshipsSubscriptionGroup), SubscriptionRelationshipsIntroductoryOffers introductoryOffers = default(SubscriptionRelationshipsIntroductoryOffers), SubscriptionRelationshipsPromotionalOffers promotionalOffers = default(SubscriptionRelationshipsPromotionalOffers), SubscriptionRelationshipsOfferCodes offerCodes = default(SubscriptionRelationshipsOfferCodes), SubscriptionRelationshipsPrices prices = default(SubscriptionRelationshipsPrices), AnalyticsReportInstanceRelationshipsSegments pricePoints = default(AnalyticsReportInstanceRelationshipsSegments), InAppPurchaseV2RelationshipsPromotedPurchase promotedPurchase = default(InAppPurchaseV2RelationshipsPromotedPurchase), SubscriptionRelationshipsSubscriptionAvailability subscriptionAvailability = default(SubscriptionRelationshipsSubscriptionAvailability), SubscriptionRelationshipsWinBackOffers winBackOffers = default(SubscriptionRelationshipsWinBackOffers), SubscriptionRelationshipsImages images = default(SubscriptionRelationshipsImages))
        {
            this.SubscriptionLocalizations = subscriptionLocalizations;
            this.AppStoreReviewScreenshot = appStoreReviewScreenshot;
            this.Group = group;
            this.IntroductoryOffers = introductoryOffers;
            this.PromotionalOffers = promotionalOffers;
            this.OfferCodes = offerCodes;
            this.Prices = prices;
            this.PricePoints = pricePoints;
            this.PromotedPurchase = promotedPurchase;
            this.SubscriptionAvailability = subscriptionAvailability;
            this.WinBackOffers = winBackOffers;
            this.Images = images;
        }

        /// <summary>
        /// Gets or Sets SubscriptionLocalizations
        /// </summary>
        [DataMember(Name = "subscriptionLocalizations", EmitDefaultValue = false)]
        public SubscriptionRelationshipsSubscriptionLocalizations SubscriptionLocalizations { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreReviewScreenshot
        /// </summary>
        [DataMember(Name = "appStoreReviewScreenshot", EmitDefaultValue = false)]
        public SubscriptionRelationshipsAppStoreReviewScreenshot AppStoreReviewScreenshot { get; set; }

        /// <summary>
        /// Gets or Sets Group
        /// </summary>
        [DataMember(Name = "group", EmitDefaultValue = false)]
        public SubscriptionGroupLocalizationRelationshipsSubscriptionGroup Group { get; set; }

        /// <summary>
        /// Gets or Sets IntroductoryOffers
        /// </summary>
        [DataMember(Name = "introductoryOffers", EmitDefaultValue = false)]
        public SubscriptionRelationshipsIntroductoryOffers IntroductoryOffers { get; set; }

        /// <summary>
        /// Gets or Sets PromotionalOffers
        /// </summary>
        [DataMember(Name = "promotionalOffers", EmitDefaultValue = false)]
        public SubscriptionRelationshipsPromotionalOffers PromotionalOffers { get; set; }

        /// <summary>
        /// Gets or Sets OfferCodes
        /// </summary>
        [DataMember(Name = "offerCodes", EmitDefaultValue = false)]
        public SubscriptionRelationshipsOfferCodes OfferCodes { get; set; }

        /// <summary>
        /// Gets or Sets Prices
        /// </summary>
        [DataMember(Name = "prices", EmitDefaultValue = false)]
        public SubscriptionRelationshipsPrices Prices { get; set; }

        /// <summary>
        /// Gets or Sets PricePoints
        /// </summary>
        [DataMember(Name = "pricePoints", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments PricePoints { get; set; }

        /// <summary>
        /// Gets or Sets PromotedPurchase
        /// </summary>
        [DataMember(Name = "promotedPurchase", EmitDefaultValue = false)]
        public InAppPurchaseV2RelationshipsPromotedPurchase PromotedPurchase { get; set; }

        /// <summary>
        /// Gets or Sets SubscriptionAvailability
        /// </summary>
        [DataMember(Name = "subscriptionAvailability", EmitDefaultValue = false)]
        public SubscriptionRelationshipsSubscriptionAvailability SubscriptionAvailability { get; set; }

        /// <summary>
        /// Gets or Sets WinBackOffers
        /// </summary>
        [DataMember(Name = "winBackOffers", EmitDefaultValue = false)]
        public SubscriptionRelationshipsWinBackOffers WinBackOffers { get; set; }

        /// <summary>
        /// Gets or Sets Images
        /// </summary>
        [DataMember(Name = "images", EmitDefaultValue = false)]
        public SubscriptionRelationshipsImages Images { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SubscriptionRelationships {\n");
            sb.Append("  SubscriptionLocalizations: ").Append(SubscriptionLocalizations).Append("\n");
            sb.Append("  AppStoreReviewScreenshot: ").Append(AppStoreReviewScreenshot).Append("\n");
            sb.Append("  Group: ").Append(Group).Append("\n");
            sb.Append("  IntroductoryOffers: ").Append(IntroductoryOffers).Append("\n");
            sb.Append("  PromotionalOffers: ").Append(PromotionalOffers).Append("\n");
            sb.Append("  OfferCodes: ").Append(OfferCodes).Append("\n");
            sb.Append("  Prices: ").Append(Prices).Append("\n");
            sb.Append("  PricePoints: ").Append(PricePoints).Append("\n");
            sb.Append("  PromotedPurchase: ").Append(PromotedPurchase).Append("\n");
            sb.Append("  SubscriptionAvailability: ").Append(SubscriptionAvailability).Append("\n");
            sb.Append("  WinBackOffers: ").Append(WinBackOffers).Append("\n");
            sb.Append("  Images: ").Append(Images).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
