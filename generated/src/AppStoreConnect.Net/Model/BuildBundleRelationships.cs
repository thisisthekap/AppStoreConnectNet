/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// BuildBundleRelationships
    /// </summary>
    [DataContract(Name = "BuildBundle_relationships")]
    public partial class BuildBundleRelationships : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BuildBundleRelationships" /> class.
        /// </summary>
        /// <param name="appClipDomainCacheStatus">appClipDomainCacheStatus.</param>
        /// <param name="appClipDomainDebugStatus">appClipDomainDebugStatus.</param>
        /// <param name="betaAppClipInvocations">betaAppClipInvocations.</param>
        /// <param name="buildBundleFileSizes">buildBundleFileSizes.</param>
        public BuildBundleRelationships(BuildBundleRelationshipsAppClipDomainCacheStatus appClipDomainCacheStatus = default(BuildBundleRelationshipsAppClipDomainCacheStatus), BuildBundleRelationshipsAppClipDomainCacheStatus appClipDomainDebugStatus = default(BuildBundleRelationshipsAppClipDomainCacheStatus), BuildBundleRelationshipsBetaAppClipInvocations betaAppClipInvocations = default(BuildBundleRelationshipsBetaAppClipInvocations), BuildBundleRelationshipsBuildBundleFileSizes buildBundleFileSizes = default(BuildBundleRelationshipsBuildBundleFileSizes))
        {
            this.AppClipDomainCacheStatus = appClipDomainCacheStatus;
            this.AppClipDomainDebugStatus = appClipDomainDebugStatus;
            this.BetaAppClipInvocations = betaAppClipInvocations;
            this.BuildBundleFileSizes = buildBundleFileSizes;
        }

        /// <summary>
        /// Gets or Sets AppClipDomainCacheStatus
        /// </summary>
        [DataMember(Name = "appClipDomainCacheStatus", EmitDefaultValue = false)]
        public BuildBundleRelationshipsAppClipDomainCacheStatus AppClipDomainCacheStatus { get; set; }

        /// <summary>
        /// Gets or Sets AppClipDomainDebugStatus
        /// </summary>
        [DataMember(Name = "appClipDomainDebugStatus", EmitDefaultValue = false)]
        public BuildBundleRelationshipsAppClipDomainCacheStatus AppClipDomainDebugStatus { get; set; }

        /// <summary>
        /// Gets or Sets BetaAppClipInvocations
        /// </summary>
        [DataMember(Name = "betaAppClipInvocations", EmitDefaultValue = false)]
        public BuildBundleRelationshipsBetaAppClipInvocations BetaAppClipInvocations { get; set; }

        /// <summary>
        /// Gets or Sets BuildBundleFileSizes
        /// </summary>
        [DataMember(Name = "buildBundleFileSizes", EmitDefaultValue = false)]
        public BuildBundleRelationshipsBuildBundleFileSizes BuildBundleFileSizes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BuildBundleRelationships {\n");
            sb.Append("  AppClipDomainCacheStatus: ").Append(AppClipDomainCacheStatus).Append("\n");
            sb.Append("  AppClipDomainDebugStatus: ").Append(AppClipDomainDebugStatus).Append("\n");
            sb.Append("  BetaAppClipInvocations: ").Append(BetaAppClipInvocations).Append("\n");
            sb.Append("  BuildBundleFileSizes: ").Append(BuildBundleFileSizes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
