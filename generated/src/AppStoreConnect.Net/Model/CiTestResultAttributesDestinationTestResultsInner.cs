/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// CiTestResultAttributesDestinationTestResultsInner
    /// </summary>
    [DataContract(Name = "CiTestResult_attributes_destinationTestResults_inner")]
    public partial class CiTestResultAttributesDestinationTestResultsInner : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public CiTestStatus? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CiTestResultAttributesDestinationTestResultsInner" /> class.
        /// </summary>
        /// <param name="uuid">uuid.</param>
        /// <param name="deviceName">deviceName.</param>
        /// <param name="osVersion">osVersion.</param>
        /// <param name="status">status.</param>
        /// <param name="duration">duration.</param>
        public CiTestResultAttributesDestinationTestResultsInner(string uuid = default(string), string deviceName = default(string), string osVersion = default(string), CiTestStatus? status = default(CiTestStatus?), decimal duration = default(decimal))
        {
            this.Uuid = uuid;
            this.DeviceName = deviceName;
            this.OsVersion = osVersion;
            this.Status = status;
            this.Duration = duration;
        }

        /// <summary>
        /// Gets or Sets Uuid
        /// </summary>
        [DataMember(Name = "uuid", EmitDefaultValue = false)]
        public string Uuid { get; set; }

        /// <summary>
        /// Gets or Sets DeviceName
        /// </summary>
        [DataMember(Name = "deviceName", EmitDefaultValue = false)]
        public string DeviceName { get; set; }

        /// <summary>
        /// Gets or Sets OsVersion
        /// </summary>
        [DataMember(Name = "osVersion", EmitDefaultValue = false)]
        public string OsVersion { get; set; }

        /// <summary>
        /// Gets or Sets Duration
        /// </summary>
        [DataMember(Name = "duration", EmitDefaultValue = false)]
        public decimal Duration { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CiTestResultAttributesDestinationTestResultsInner {\n");
            sb.Append("  Uuid: ").Append(Uuid).Append("\n");
            sb.Append("  DeviceName: ").Append(DeviceName).Append("\n");
            sb.Append("  OsVersion: ").Append(OsVersion).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
