/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// DiagnosticLogsProductDataInnerDiagnosticLogsInnerDiagnosticMetaData
    /// </summary>
    [DataContract(Name = "diagnosticLogs_productData_inner_diagnosticLogs_inner_diagnosticMetaData")]
    public partial class DiagnosticLogsProductDataInnerDiagnosticLogsInnerDiagnosticMetaData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DiagnosticLogsProductDataInnerDiagnosticLogsInnerDiagnosticMetaData" /> class.
        /// </summary>
        /// <param name="bundleId">bundleId.</param>
        /// <param name="varEvent">varEvent.</param>
        /// <param name="osVersion">osVersion.</param>
        /// <param name="appVersion">appVersion.</param>
        /// <param name="writesCaused">writesCaused.</param>
        /// <param name="deviceType">deviceType.</param>
        /// <param name="platformArchitecture">platformArchitecture.</param>
        /// <param name="eventDetail">eventDetail.</param>
        /// <param name="buildVersion">buildVersion.</param>
        public DiagnosticLogsProductDataInnerDiagnosticLogsInnerDiagnosticMetaData(string bundleId = default(string), string varEvent = default(string), string osVersion = default(string), string appVersion = default(string), string writesCaused = default(string), string deviceType = default(string), string platformArchitecture = default(string), string eventDetail = default(string), string buildVersion = default(string))
        {
            this.BundleId = bundleId;
            this.Event = varEvent;
            this.OsVersion = osVersion;
            this.AppVersion = appVersion;
            this.WritesCaused = writesCaused;
            this.DeviceType = deviceType;
            this.PlatformArchitecture = platformArchitecture;
            this.EventDetail = eventDetail;
            this.BuildVersion = buildVersion;
        }

        /// <summary>
        /// Gets or Sets BundleId
        /// </summary>
        [DataMember(Name = "bundleId", EmitDefaultValue = false)]
        public string BundleId { get; set; }

        /// <summary>
        /// Gets or Sets Event
        /// </summary>
        [DataMember(Name = "event", EmitDefaultValue = false)]
        public string Event { get; set; }

        /// <summary>
        /// Gets or Sets OsVersion
        /// </summary>
        [DataMember(Name = "osVersion", EmitDefaultValue = false)]
        public string OsVersion { get; set; }

        /// <summary>
        /// Gets or Sets AppVersion
        /// </summary>
        [DataMember(Name = "appVersion", EmitDefaultValue = false)]
        public string AppVersion { get; set; }

        /// <summary>
        /// Gets or Sets WritesCaused
        /// </summary>
        [DataMember(Name = "writesCaused", EmitDefaultValue = false)]
        public string WritesCaused { get; set; }

        /// <summary>
        /// Gets or Sets DeviceType
        /// </summary>
        [DataMember(Name = "deviceType", EmitDefaultValue = false)]
        public string DeviceType { get; set; }

        /// <summary>
        /// Gets or Sets PlatformArchitecture
        /// </summary>
        [DataMember(Name = "platformArchitecture", EmitDefaultValue = false)]
        public string PlatformArchitecture { get; set; }

        /// <summary>
        /// Gets or Sets EventDetail
        /// </summary>
        [DataMember(Name = "eventDetail", EmitDefaultValue = false)]
        public string EventDetail { get; set; }

        /// <summary>
        /// Gets or Sets BuildVersion
        /// </summary>
        [DataMember(Name = "buildVersion", EmitDefaultValue = false)]
        public string BuildVersion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DiagnosticLogsProductDataInnerDiagnosticLogsInnerDiagnosticMetaData {\n");
            sb.Append("  BundleId: ").Append(BundleId).Append("\n");
            sb.Append("  Event: ").Append(Event).Append("\n");
            sb.Append("  OsVersion: ").Append(OsVersion).Append("\n");
            sb.Append("  AppVersion: ").Append(AppVersion).Append("\n");
            sb.Append("  WritesCaused: ").Append(WritesCaused).Append("\n");
            sb.Append("  DeviceType: ").Append(DeviceType).Append("\n");
            sb.Append("  PlatformArchitecture: ").Append(PlatformArchitecture).Append("\n");
            sb.Append("  EventDetail: ").Append(EventDetail).Append("\n");
            sb.Append("  BuildVersion: ").Append(BuildVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
