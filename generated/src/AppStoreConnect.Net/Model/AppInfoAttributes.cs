/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// AppInfoAttributes
    /// </summary>
    [DataContract(Name = "AppInfo_attributes")]
    public partial class AppInfoAttributes : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets AppStoreState
        /// </summary>
        [DataMember(Name = "appStoreState", EmitDefaultValue = false)]
        public AppStoreVersionState? AppStoreState { get; set; }
        /// <summary>
        /// Defines State
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StateEnum
        {
            /// <summary>
            /// Enum ACCEPTED for value: ACCEPTED
            /// </summary>
            [EnumMember(Value = "ACCEPTED")]
            ACCEPTED = 1,

            /// <summary>
            /// Enum DEVELOPERREJECTED for value: DEVELOPER_REJECTED
            /// </summary>
            [EnumMember(Value = "DEVELOPER_REJECTED")]
            DEVELOPERREJECTED = 2,

            /// <summary>
            /// Enum INREVIEW for value: IN_REVIEW
            /// </summary>
            [EnumMember(Value = "IN_REVIEW")]
            INREVIEW = 3,

            /// <summary>
            /// Enum PENDINGRELEASE for value: PENDING_RELEASE
            /// </summary>
            [EnumMember(Value = "PENDING_RELEASE")]
            PENDINGRELEASE = 4,

            /// <summary>
            /// Enum PREPAREFORSUBMISSION for value: PREPARE_FOR_SUBMISSION
            /// </summary>
            [EnumMember(Value = "PREPARE_FOR_SUBMISSION")]
            PREPAREFORSUBMISSION = 5,

            /// <summary>
            /// Enum READYFORDISTRIBUTION for value: READY_FOR_DISTRIBUTION
            /// </summary>
            [EnumMember(Value = "READY_FOR_DISTRIBUTION")]
            READYFORDISTRIBUTION = 6,

            /// <summary>
            /// Enum READYFORREVIEW for value: READY_FOR_REVIEW
            /// </summary>
            [EnumMember(Value = "READY_FOR_REVIEW")]
            READYFORREVIEW = 7,

            /// <summary>
            /// Enum REJECTED for value: REJECTED
            /// </summary>
            [EnumMember(Value = "REJECTED")]
            REJECTED = 8,

            /// <summary>
            /// Enum REPLACEDWITHNEWINFO for value: REPLACED_WITH_NEW_INFO
            /// </summary>
            [EnumMember(Value = "REPLACED_WITH_NEW_INFO")]
            REPLACEDWITHNEWINFO = 9,

            /// <summary>
            /// Enum WAITINGFORREVIEW for value: WAITING_FOR_REVIEW
            /// </summary>
            [EnumMember(Value = "WAITING_FOR_REVIEW")]
            WAITINGFORREVIEW = 10
        }


        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name = "state", EmitDefaultValue = false)]
        public StateEnum? State { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreAgeRating
        /// </summary>
        [DataMember(Name = "appStoreAgeRating", EmitDefaultValue = false)]
        public AppStoreAgeRating? AppStoreAgeRating { get; set; }
        /// <summary>
        /// Defines AustraliaAgeRating
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum AustraliaAgeRatingEnum
        {
            /// <summary>
            /// Enum FIFTEEN for value: FIFTEEN
            /// </summary>
            [EnumMember(Value = "FIFTEEN")]
            FIFTEEN = 1,

            /// <summary>
            /// Enum EIGHTEEN for value: EIGHTEEN
            /// </summary>
            [EnumMember(Value = "EIGHTEEN")]
            EIGHTEEN = 2
        }


        /// <summary>
        /// Gets or Sets AustraliaAgeRating
        /// </summary>
        [DataMember(Name = "australiaAgeRating", EmitDefaultValue = false)]
        public AustraliaAgeRatingEnum? AustraliaAgeRating { get; set; }

        /// <summary>
        /// Gets or Sets BrazilAgeRating
        /// </summary>
        [DataMember(Name = "brazilAgeRating", EmitDefaultValue = false)]
        public BrazilAgeRating? BrazilAgeRating { get; set; }
        /// <summary>
        /// Defines BrazilAgeRatingV2
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum BrazilAgeRatingV2Enum
        {
            /// <summary>
            /// Enum SELFRATEDL for value: SELF_RATED_L
            /// </summary>
            [EnumMember(Value = "SELF_RATED_L")]
            SELFRATEDL = 1,

            /// <summary>
            /// Enum SELFRATEDTEN for value: SELF_RATED_TEN
            /// </summary>
            [EnumMember(Value = "SELF_RATED_TEN")]
            SELFRATEDTEN = 2,

            /// <summary>
            /// Enum SELFRATEDTWELVE for value: SELF_RATED_TWELVE
            /// </summary>
            [EnumMember(Value = "SELF_RATED_TWELVE")]
            SELFRATEDTWELVE = 3,

            /// <summary>
            /// Enum SELFRATEDFOURTEEN for value: SELF_RATED_FOURTEEN
            /// </summary>
            [EnumMember(Value = "SELF_RATED_FOURTEEN")]
            SELFRATEDFOURTEEN = 4,

            /// <summary>
            /// Enum SELFRATEDSIXTEEN for value: SELF_RATED_SIXTEEN
            /// </summary>
            [EnumMember(Value = "SELF_RATED_SIXTEEN")]
            SELFRATEDSIXTEEN = 5,

            /// <summary>
            /// Enum SELFRATEDEIGHTEEN for value: SELF_RATED_EIGHTEEN
            /// </summary>
            [EnumMember(Value = "SELF_RATED_EIGHTEEN")]
            SELFRATEDEIGHTEEN = 6,

            /// <summary>
            /// Enum OFFICIALL for value: OFFICIAL_L
            /// </summary>
            [EnumMember(Value = "OFFICIAL_L")]
            OFFICIALL = 7,

            /// <summary>
            /// Enum OFFICIALTEN for value: OFFICIAL_TEN
            /// </summary>
            [EnumMember(Value = "OFFICIAL_TEN")]
            OFFICIALTEN = 8,

            /// <summary>
            /// Enum OFFICIALTWELVE for value: OFFICIAL_TWELVE
            /// </summary>
            [EnumMember(Value = "OFFICIAL_TWELVE")]
            OFFICIALTWELVE = 9,

            /// <summary>
            /// Enum OFFICIALFOURTEEN for value: OFFICIAL_FOURTEEN
            /// </summary>
            [EnumMember(Value = "OFFICIAL_FOURTEEN")]
            OFFICIALFOURTEEN = 10,

            /// <summary>
            /// Enum OFFICIALSIXTEEN for value: OFFICIAL_SIXTEEN
            /// </summary>
            [EnumMember(Value = "OFFICIAL_SIXTEEN")]
            OFFICIALSIXTEEN = 11,

            /// <summary>
            /// Enum OFFICIALEIGHTEEN for value: OFFICIAL_EIGHTEEN
            /// </summary>
            [EnumMember(Value = "OFFICIAL_EIGHTEEN")]
            OFFICIALEIGHTEEN = 12
        }


        /// <summary>
        /// Gets or Sets BrazilAgeRatingV2
        /// </summary>
        [DataMember(Name = "brazilAgeRatingV2", EmitDefaultValue = false)]
        public BrazilAgeRatingV2Enum? BrazilAgeRatingV2 { get; set; }
        /// <summary>
        /// Defines KoreaAgeRating
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum KoreaAgeRatingEnum
        {
            /// <summary>
            /// Enum ALL for value: ALL
            /// </summary>
            [EnumMember(Value = "ALL")]
            ALL = 1,

            /// <summary>
            /// Enum TWELVE for value: TWELVE
            /// </summary>
            [EnumMember(Value = "TWELVE")]
            TWELVE = 2,

            /// <summary>
            /// Enum FIFTEEN for value: FIFTEEN
            /// </summary>
            [EnumMember(Value = "FIFTEEN")]
            FIFTEEN = 3,

            /// <summary>
            /// Enum NINETEEN for value: NINETEEN
            /// </summary>
            [EnumMember(Value = "NINETEEN")]
            NINETEEN = 4,

            /// <summary>
            /// Enum NOTAPPLICABLE for value: NOT_APPLICABLE
            /// </summary>
            [EnumMember(Value = "NOT_APPLICABLE")]
            NOTAPPLICABLE = 5
        }


        /// <summary>
        /// Gets or Sets KoreaAgeRating
        /// </summary>
        [DataMember(Name = "koreaAgeRating", EmitDefaultValue = false)]
        public KoreaAgeRatingEnum? KoreaAgeRating { get; set; }

        /// <summary>
        /// Gets or Sets KidsAgeBand
        /// </summary>
        [DataMember(Name = "kidsAgeBand", EmitDefaultValue = false)]
        public KidsAgeBand? KidsAgeBand { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AppInfoAttributes" /> class.
        /// </summary>
        /// <param name="appStoreState">appStoreState.</param>
        /// <param name="state">state.</param>
        /// <param name="appStoreAgeRating">appStoreAgeRating.</param>
        /// <param name="australiaAgeRating">australiaAgeRating.</param>
        /// <param name="brazilAgeRating">brazilAgeRating.</param>
        /// <param name="brazilAgeRatingV2">brazilAgeRatingV2.</param>
        /// <param name="koreaAgeRating">koreaAgeRating.</param>
        /// <param name="kidsAgeBand">kidsAgeBand.</param>
        public AppInfoAttributes(AppStoreVersionState? appStoreState = default(AppStoreVersionState?), StateEnum? state = default(StateEnum?), AppStoreAgeRating? appStoreAgeRating = default(AppStoreAgeRating?), AustraliaAgeRatingEnum? australiaAgeRating = default(AustraliaAgeRatingEnum?), BrazilAgeRating? brazilAgeRating = default(BrazilAgeRating?), BrazilAgeRatingV2Enum? brazilAgeRatingV2 = default(BrazilAgeRatingV2Enum?), KoreaAgeRatingEnum? koreaAgeRating = default(KoreaAgeRatingEnum?), KidsAgeBand? kidsAgeBand = default(KidsAgeBand?))
        {
            this.AppStoreState = appStoreState;
            this.State = state;
            this.AppStoreAgeRating = appStoreAgeRating;
            this.AustraliaAgeRating = australiaAgeRating;
            this.BrazilAgeRating = brazilAgeRating;
            this.BrazilAgeRatingV2 = brazilAgeRatingV2;
            this.KoreaAgeRating = koreaAgeRating;
            this.KidsAgeBand = kidsAgeBand;
        }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AppInfoAttributes {\n");
            sb.Append("  AppStoreState: ").Append(AppStoreState).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  AppStoreAgeRating: ").Append(AppStoreAgeRating).Append("\n");
            sb.Append("  AustraliaAgeRating: ").Append(AustraliaAgeRating).Append("\n");
            sb.Append("  BrazilAgeRating: ").Append(BrazilAgeRating).Append("\n");
            sb.Append("  BrazilAgeRatingV2: ").Append(BrazilAgeRatingV2).Append("\n");
            sb.Append("  KoreaAgeRating: ").Append(KoreaAgeRating).Append("\n");
            sb.Append("  KidsAgeBand: ").Append(KidsAgeBand).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
