/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// AppAttributes
    /// </summary>
    [DataContract(Name = "App_attributes")]
    public partial class AppAttributes : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets SubscriptionStatusUrlVersion
        /// </summary>
        [DataMember(Name = "subscriptionStatusUrlVersion", EmitDefaultValue = false)]
        public SubscriptionStatusUrlVersion? SubscriptionStatusUrlVersion { get; set; }

        /// <summary>
        /// Gets or Sets SubscriptionStatusUrlVersionForSandbox
        /// </summary>
        [DataMember(Name = "subscriptionStatusUrlVersionForSandbox", EmitDefaultValue = false)]
        public SubscriptionStatusUrlVersion? SubscriptionStatusUrlVersionForSandbox { get; set; }
        /// <summary>
        /// Defines ContentRightsDeclaration
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ContentRightsDeclarationEnum
        {
            /// <summary>
            /// Enum DOESNOTUSETHIRDPARTYCONTENT for value: DOES_NOT_USE_THIRD_PARTY_CONTENT
            /// </summary>
            [EnumMember(Value = "DOES_NOT_USE_THIRD_PARTY_CONTENT")]
            DOESNOTUSETHIRDPARTYCONTENT = 1,

            /// <summary>
            /// Enum USESTHIRDPARTYCONTENT for value: USES_THIRD_PARTY_CONTENT
            /// </summary>
            [EnumMember(Value = "USES_THIRD_PARTY_CONTENT")]
            USESTHIRDPARTYCONTENT = 2
        }


        /// <summary>
        /// Gets or Sets ContentRightsDeclaration
        /// </summary>
        [DataMember(Name = "contentRightsDeclaration", EmitDefaultValue = false)]
        public ContentRightsDeclarationEnum? ContentRightsDeclaration { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AppAttributes" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="bundleId">bundleId.</param>
        /// <param name="sku">sku.</param>
        /// <param name="primaryLocale">primaryLocale.</param>
        /// <param name="isOrEverWasMadeForKids">isOrEverWasMadeForKids.</param>
        /// <param name="subscriptionStatusUrl">subscriptionStatusUrl.</param>
        /// <param name="subscriptionStatusUrlVersion">subscriptionStatusUrlVersion.</param>
        /// <param name="subscriptionStatusUrlForSandbox">subscriptionStatusUrlForSandbox.</param>
        /// <param name="subscriptionStatusUrlVersionForSandbox">subscriptionStatusUrlVersionForSandbox.</param>
        /// <param name="contentRightsDeclaration">contentRightsDeclaration.</param>
        /// <param name="streamlinedPurchasingEnabled">streamlinedPurchasingEnabled.</param>
        public AppAttributes(string name = default(string), string bundleId = default(string), string sku = default(string), string primaryLocale = default(string), bool isOrEverWasMadeForKids = default(bool), string subscriptionStatusUrl = default(string), SubscriptionStatusUrlVersion? subscriptionStatusUrlVersion = default(SubscriptionStatusUrlVersion?), string subscriptionStatusUrlForSandbox = default(string), SubscriptionStatusUrlVersion? subscriptionStatusUrlVersionForSandbox = default(SubscriptionStatusUrlVersion?), ContentRightsDeclarationEnum? contentRightsDeclaration = default(ContentRightsDeclarationEnum?), bool streamlinedPurchasingEnabled = default(bool))
        {
            this.Name = name;
            this.BundleId = bundleId;
            this.Sku = sku;
            this.PrimaryLocale = primaryLocale;
            this.IsOrEverWasMadeForKids = isOrEverWasMadeForKids;
            this.SubscriptionStatusUrl = subscriptionStatusUrl;
            this.SubscriptionStatusUrlVersion = subscriptionStatusUrlVersion;
            this.SubscriptionStatusUrlForSandbox = subscriptionStatusUrlForSandbox;
            this.SubscriptionStatusUrlVersionForSandbox = subscriptionStatusUrlVersionForSandbox;
            this.ContentRightsDeclaration = contentRightsDeclaration;
            this.StreamlinedPurchasingEnabled = streamlinedPurchasingEnabled;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets BundleId
        /// </summary>
        [DataMember(Name = "bundleId", EmitDefaultValue = false)]
        public string BundleId { get; set; }

        /// <summary>
        /// Gets or Sets Sku
        /// </summary>
        [DataMember(Name = "sku", EmitDefaultValue = false)]
        public string Sku { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryLocale
        /// </summary>
        [DataMember(Name = "primaryLocale", EmitDefaultValue = false)]
        public string PrimaryLocale { get; set; }

        /// <summary>
        /// Gets or Sets IsOrEverWasMadeForKids
        /// </summary>
        [DataMember(Name = "isOrEverWasMadeForKids", EmitDefaultValue = true)]
        public bool IsOrEverWasMadeForKids { get; set; }

        /// <summary>
        /// Gets or Sets SubscriptionStatusUrl
        /// </summary>
        [DataMember(Name = "subscriptionStatusUrl", EmitDefaultValue = false)]
        public string SubscriptionStatusUrl { get; set; }

        /// <summary>
        /// Gets or Sets SubscriptionStatusUrlForSandbox
        /// </summary>
        [DataMember(Name = "subscriptionStatusUrlForSandbox", EmitDefaultValue = false)]
        public string SubscriptionStatusUrlForSandbox { get; set; }

        /// <summary>
        /// Gets or Sets StreamlinedPurchasingEnabled
        /// </summary>
        [DataMember(Name = "streamlinedPurchasingEnabled", EmitDefaultValue = true)]
        public bool StreamlinedPurchasingEnabled { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AppAttributes {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  BundleId: ").Append(BundleId).Append("\n");
            sb.Append("  Sku: ").Append(Sku).Append("\n");
            sb.Append("  PrimaryLocale: ").Append(PrimaryLocale).Append("\n");
            sb.Append("  IsOrEverWasMadeForKids: ").Append(IsOrEverWasMadeForKids).Append("\n");
            sb.Append("  SubscriptionStatusUrl: ").Append(SubscriptionStatusUrl).Append("\n");
            sb.Append("  SubscriptionStatusUrlVersion: ").Append(SubscriptionStatusUrlVersion).Append("\n");
            sb.Append("  SubscriptionStatusUrlForSandbox: ").Append(SubscriptionStatusUrlForSandbox).Append("\n");
            sb.Append("  SubscriptionStatusUrlVersionForSandbox: ").Append(SubscriptionStatusUrlVersionForSandbox).Append("\n");
            sb.Append("  ContentRightsDeclaration: ").Append(ContentRightsDeclaration).Append("\n");
            sb.Append("  StreamlinedPurchasingEnabled: ").Append(StreamlinedPurchasingEnabled).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
