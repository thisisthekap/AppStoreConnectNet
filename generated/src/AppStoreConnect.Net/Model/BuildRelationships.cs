/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// BuildRelationships
    /// </summary>
    [DataContract(Name = "Build_relationships")]
    public partial class BuildRelationships : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BuildRelationships" /> class.
        /// </summary>
        /// <param name="preReleaseVersion">preReleaseVersion.</param>
        /// <param name="individualTesters">individualTesters.</param>
        /// <param name="betaGroups">betaGroups.</param>
        /// <param name="betaBuildLocalizations">betaBuildLocalizations.</param>
        /// <param name="appEncryptionDeclaration">appEncryptionDeclaration.</param>
        /// <param name="betaAppReviewSubmission">betaAppReviewSubmission.</param>
        /// <param name="app">app.</param>
        /// <param name="buildBetaDetail">buildBetaDetail.</param>
        /// <param name="appStoreVersion">appStoreVersion.</param>
        /// <param name="icons">icons.</param>
        /// <param name="buildBundles">buildBundles.</param>
        /// <param name="perfPowerMetrics">perfPowerMetrics.</param>
        /// <param name="diagnosticSignatures">diagnosticSignatures.</param>
        public BuildRelationships(BuildRelationshipsPreReleaseVersion preReleaseVersion = default(BuildRelationshipsPreReleaseVersion), BetaGroupRelationshipsBetaTesters individualTesters = default(BetaGroupRelationshipsBetaTesters), AppRelationshipsBetaGroups betaGroups = default(AppRelationshipsBetaGroups), BuildRelationshipsBetaBuildLocalizations betaBuildLocalizations = default(BuildRelationshipsBetaBuildLocalizations), BuildRelationshipsAppEncryptionDeclaration appEncryptionDeclaration = default(BuildRelationshipsAppEncryptionDeclaration), BuildRelationshipsBetaAppReviewSubmission betaAppReviewSubmission = default(BuildRelationshipsBetaAppReviewSubmission), BetaAppLocalizationRelationshipsApp app = default(BetaAppLocalizationRelationshipsApp), BuildRelationshipsBuildBetaDetail buildBetaDetail = default(BuildRelationshipsBuildBetaDetail), AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion appStoreVersion = default(AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion), BuildRelationshipsIcons icons = default(BuildRelationshipsIcons), BuildRelationshipsBuildBundles buildBundles = default(BuildRelationshipsBuildBundles), AnalyticsReportInstanceRelationshipsSegments perfPowerMetrics = default(AnalyticsReportInstanceRelationshipsSegments), AnalyticsReportInstanceRelationshipsSegments diagnosticSignatures = default(AnalyticsReportInstanceRelationshipsSegments))
        {
            this.PreReleaseVersion = preReleaseVersion;
            this.IndividualTesters = individualTesters;
            this.BetaGroups = betaGroups;
            this.BetaBuildLocalizations = betaBuildLocalizations;
            this.AppEncryptionDeclaration = appEncryptionDeclaration;
            this.BetaAppReviewSubmission = betaAppReviewSubmission;
            this.App = app;
            this.BuildBetaDetail = buildBetaDetail;
            this.AppStoreVersion = appStoreVersion;
            this.Icons = icons;
            this.BuildBundles = buildBundles;
            this.PerfPowerMetrics = perfPowerMetrics;
            this.DiagnosticSignatures = diagnosticSignatures;
        }

        /// <summary>
        /// Gets or Sets PreReleaseVersion
        /// </summary>
        [DataMember(Name = "preReleaseVersion", EmitDefaultValue = false)]
        public BuildRelationshipsPreReleaseVersion PreReleaseVersion { get; set; }

        /// <summary>
        /// Gets or Sets IndividualTesters
        /// </summary>
        [DataMember(Name = "individualTesters", EmitDefaultValue = false)]
        public BetaGroupRelationshipsBetaTesters IndividualTesters { get; set; }

        /// <summary>
        /// Gets or Sets BetaGroups
        /// </summary>
        [DataMember(Name = "betaGroups", EmitDefaultValue = false)]
        public AppRelationshipsBetaGroups BetaGroups { get; set; }

        /// <summary>
        /// Gets or Sets BetaBuildLocalizations
        /// </summary>
        [DataMember(Name = "betaBuildLocalizations", EmitDefaultValue = false)]
        public BuildRelationshipsBetaBuildLocalizations BetaBuildLocalizations { get; set; }

        /// <summary>
        /// Gets or Sets AppEncryptionDeclaration
        /// </summary>
        [DataMember(Name = "appEncryptionDeclaration", EmitDefaultValue = false)]
        public BuildRelationshipsAppEncryptionDeclaration AppEncryptionDeclaration { get; set; }

        /// <summary>
        /// Gets or Sets BetaAppReviewSubmission
        /// </summary>
        [DataMember(Name = "betaAppReviewSubmission", EmitDefaultValue = false)]
        public BuildRelationshipsBetaAppReviewSubmission BetaAppReviewSubmission { get; set; }

        /// <summary>
        /// Gets or Sets App
        /// </summary>
        [DataMember(Name = "app", EmitDefaultValue = false)]
        public BetaAppLocalizationRelationshipsApp App { get; set; }

        /// <summary>
        /// Gets or Sets BuildBetaDetail
        /// </summary>
        [DataMember(Name = "buildBetaDetail", EmitDefaultValue = false)]
        public BuildRelationshipsBuildBetaDetail BuildBetaDetail { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreVersion
        /// </summary>
        [DataMember(Name = "appStoreVersion", EmitDefaultValue = false)]
        public AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion AppStoreVersion { get; set; }

        /// <summary>
        /// Gets or Sets Icons
        /// </summary>
        [DataMember(Name = "icons", EmitDefaultValue = false)]
        public BuildRelationshipsIcons Icons { get; set; }

        /// <summary>
        /// Gets or Sets BuildBundles
        /// </summary>
        [DataMember(Name = "buildBundles", EmitDefaultValue = false)]
        public BuildRelationshipsBuildBundles BuildBundles { get; set; }

        /// <summary>
        /// Gets or Sets PerfPowerMetrics
        /// </summary>
        [DataMember(Name = "perfPowerMetrics", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments PerfPowerMetrics { get; set; }

        /// <summary>
        /// Gets or Sets DiagnosticSignatures
        /// </summary>
        [DataMember(Name = "diagnosticSignatures", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments DiagnosticSignatures { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BuildRelationships {\n");
            sb.Append("  PreReleaseVersion: ").Append(PreReleaseVersion).Append("\n");
            sb.Append("  IndividualTesters: ").Append(IndividualTesters).Append("\n");
            sb.Append("  BetaGroups: ").Append(BetaGroups).Append("\n");
            sb.Append("  BetaBuildLocalizations: ").Append(BetaBuildLocalizations).Append("\n");
            sb.Append("  AppEncryptionDeclaration: ").Append(AppEncryptionDeclaration).Append("\n");
            sb.Append("  BetaAppReviewSubmission: ").Append(BetaAppReviewSubmission).Append("\n");
            sb.Append("  App: ").Append(App).Append("\n");
            sb.Append("  BuildBetaDetail: ").Append(BuildBetaDetail).Append("\n");
            sb.Append("  AppStoreVersion: ").Append(AppStoreVersion).Append("\n");
            sb.Append("  Icons: ").Append(Icons).Append("\n");
            sb.Append("  BuildBundles: ").Append(BuildBundles).Append("\n");
            sb.Append("  PerfPowerMetrics: ").Append(PerfPowerMetrics).Append("\n");
            sb.Append("  DiagnosticSignatures: ").Append(DiagnosticSignatures).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
