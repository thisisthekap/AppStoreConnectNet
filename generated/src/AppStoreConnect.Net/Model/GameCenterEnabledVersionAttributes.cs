/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// GameCenterEnabledVersionAttributes
    /// </summary>
    [DataContract(Name = "GameCenterEnabledVersion_attributes")]
    public partial class GameCenterEnabledVersionAttributes : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Platform
        /// </summary>
        [DataMember(Name = "platform", EmitDefaultValue = false)]
        public Platform? Platform { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GameCenterEnabledVersionAttributes" /> class.
        /// </summary>
        /// <param name="platform">platform.</param>
        /// <param name="versionString">versionString.</param>
        /// <param name="iconAsset">iconAsset.</param>
        public GameCenterEnabledVersionAttributes(Platform? platform = default(Platform?), string versionString = default(string), ImageAsset iconAsset = default(ImageAsset))
        {
            this.Platform = platform;
            this.VersionString = versionString;
            this.IconAsset = iconAsset;
        }

        /// <summary>
        /// Gets or Sets VersionString
        /// </summary>
        [DataMember(Name = "versionString", EmitDefaultValue = false)]
        public string VersionString { get; set; }

        /// <summary>
        /// Gets or Sets IconAsset
        /// </summary>
        [DataMember(Name = "iconAsset", EmitDefaultValue = false)]
        public ImageAsset IconAsset { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GameCenterEnabledVersionAttributes {\n");
            sb.Append("  Platform: ").Append(Platform).Append("\n");
            sb.Append("  VersionString: ").Append(VersionString).Append("\n");
            sb.Append("  IconAsset: ").Append(IconAsset).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
