/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// ScmRepositoryRelationships
    /// </summary>
    [DataContract(Name = "ScmRepository_relationships")]
    public partial class ScmRepositoryRelationships : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ScmRepositoryRelationships" /> class.
        /// </summary>
        /// <param name="scmProvider">scmProvider.</param>
        /// <param name="defaultBranch">defaultBranch.</param>
        /// <param name="gitReferences">gitReferences.</param>
        /// <param name="pullRequests">pullRequests.</param>
        public ScmRepositoryRelationships(ScmRepositoryRelationshipsScmProvider scmProvider = default(ScmRepositoryRelationshipsScmProvider), CiBuildRunRelationshipsSourceBranchOrTag defaultBranch = default(CiBuildRunRelationshipsSourceBranchOrTag), AnalyticsReportInstanceRelationshipsSegments gitReferences = default(AnalyticsReportInstanceRelationshipsSegments), AnalyticsReportInstanceRelationshipsSegments pullRequests = default(AnalyticsReportInstanceRelationshipsSegments))
        {
            this.ScmProvider = scmProvider;
            this.DefaultBranch = defaultBranch;
            this.GitReferences = gitReferences;
            this.PullRequests = pullRequests;
        }

        /// <summary>
        /// Gets or Sets ScmProvider
        /// </summary>
        [DataMember(Name = "scmProvider", EmitDefaultValue = false)]
        public ScmRepositoryRelationshipsScmProvider ScmProvider { get; set; }

        /// <summary>
        /// Gets or Sets DefaultBranch
        /// </summary>
        [DataMember(Name = "defaultBranch", EmitDefaultValue = false)]
        public CiBuildRunRelationshipsSourceBranchOrTag DefaultBranch { get; set; }

        /// <summary>
        /// Gets or Sets GitReferences
        /// </summary>
        [DataMember(Name = "gitReferences", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments GitReferences { get; set; }

        /// <summary>
        /// Gets or Sets PullRequests
        /// </summary>
        [DataMember(Name = "pullRequests", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments PullRequests { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ScmRepositoryRelationships {\n");
            sb.Append("  ScmProvider: ").Append(ScmProvider).Append("\n");
            sb.Append("  DefaultBranch: ").Append(DefaultBranch).Append("\n");
            sb.Append("  GitReferences: ").Append(GitReferences).Append("\n");
            sb.Append("  PullRequests: ").Append(PullRequests).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
