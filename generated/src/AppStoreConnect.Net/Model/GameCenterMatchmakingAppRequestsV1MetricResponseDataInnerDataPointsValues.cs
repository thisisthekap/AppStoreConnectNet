/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// GameCenterMatchmakingAppRequestsV1MetricResponseDataInnerDataPointsValues
    /// </summary>
    [DataContract(Name = "GameCenterMatchmakingAppRequestsV1MetricResponse_data_inner_dataPoints_values")]
    public partial class GameCenterMatchmakingAppRequestsV1MetricResponseDataInnerDataPointsValues : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GameCenterMatchmakingAppRequestsV1MetricResponseDataInnerDataPointsValues" /> class.
        /// </summary>
        /// <param name="count">count.</param>
        /// <param name="averageSecondsInQueue">averageSecondsInQueue.</param>
        /// <param name="p50SecondsInQueue">p50SecondsInQueue.</param>
        /// <param name="p95SecondsInQueue">p95SecondsInQueue.</param>
        public GameCenterMatchmakingAppRequestsV1MetricResponseDataInnerDataPointsValues(int count = default(int), decimal averageSecondsInQueue = default(decimal), decimal p50SecondsInQueue = default(decimal), decimal p95SecondsInQueue = default(decimal))
        {
            this.Count = count;
            this.AverageSecondsInQueue = averageSecondsInQueue;
            this.P50SecondsInQueue = p50SecondsInQueue;
            this.P95SecondsInQueue = p95SecondsInQueue;
        }

        /// <summary>
        /// Gets or Sets Count
        /// </summary>
        [DataMember(Name = "count", EmitDefaultValue = false)]
        public int Count { get; set; }

        /// <summary>
        /// Gets or Sets AverageSecondsInQueue
        /// </summary>
        [DataMember(Name = "averageSecondsInQueue", EmitDefaultValue = false)]
        public decimal AverageSecondsInQueue { get; set; }

        /// <summary>
        /// Gets or Sets P50SecondsInQueue
        /// </summary>
        [DataMember(Name = "p50SecondsInQueue", EmitDefaultValue = false)]
        public decimal P50SecondsInQueue { get; set; }

        /// <summary>
        /// Gets or Sets P95SecondsInQueue
        /// </summary>
        [DataMember(Name = "p95SecondsInQueue", EmitDefaultValue = false)]
        public decimal P95SecondsInQueue { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GameCenterMatchmakingAppRequestsV1MetricResponseDataInnerDataPointsValues {\n");
            sb.Append("  Count: ").Append(Count).Append("\n");
            sb.Append("  AverageSecondsInQueue: ").Append(AverageSecondsInQueue).Append("\n");
            sb.Append("  P50SecondsInQueue: ").Append(P50SecondsInQueue).Append("\n");
            sb.Append("  P95SecondsInQueue: ").Append(P95SecondsInQueue).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
