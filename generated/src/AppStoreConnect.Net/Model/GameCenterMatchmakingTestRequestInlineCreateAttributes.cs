/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// GameCenterMatchmakingTestRequestInlineCreateAttributes
    /// </summary>
    [DataContract(Name = "GameCenterMatchmakingTestRequestInlineCreate_attributes")]
    public partial class GameCenterMatchmakingTestRequestInlineCreateAttributes : IValidatableObject
    {
        /// <summary>
        /// Defines Locale
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum LocaleEnum
        {
            /// <summary>
            /// Enum ARSA for value: AR-SA
            /// </summary>
            [EnumMember(Value = "AR-SA")]
            ARSA = 1,

            /// <summary>
            /// Enum CAES for value: CA-ES
            /// </summary>
            [EnumMember(Value = "CA-ES")]
            CAES = 2,

            /// <summary>
            /// Enum CSCZ for value: CS-CZ
            /// </summary>
            [EnumMember(Value = "CS-CZ")]
            CSCZ = 3,

            /// <summary>
            /// Enum DADK for value: DA-DK
            /// </summary>
            [EnumMember(Value = "DA-DK")]
            DADK = 4,

            /// <summary>
            /// Enum DEDE for value: DE-DE
            /// </summary>
            [EnumMember(Value = "DE-DE")]
            DEDE = 5,

            /// <summary>
            /// Enum ELGR for value: EL-GR
            /// </summary>
            [EnumMember(Value = "EL-GR")]
            ELGR = 6,

            /// <summary>
            /// Enum ENAU for value: EN-AU
            /// </summary>
            [EnumMember(Value = "EN-AU")]
            ENAU = 7,

            /// <summary>
            /// Enum ENGB for value: EN-GB
            /// </summary>
            [EnumMember(Value = "EN-GB")]
            ENGB = 8,

            /// <summary>
            /// Enum ENUS for value: EN-US
            /// </summary>
            [EnumMember(Value = "EN-US")]
            ENUS = 9,

            /// <summary>
            /// Enum ENKY for value: EN-KY
            /// </summary>
            [EnumMember(Value = "EN-KY")]
            ENKY = 10,

            /// <summary>
            /// Enum ESES for value: ES-ES
            /// </summary>
            [EnumMember(Value = "ES-ES")]
            ESES = 11,

            /// <summary>
            /// Enum ESMX for value: ES-MX
            /// </summary>
            [EnumMember(Value = "ES-MX")]
            ESMX = 12,

            /// <summary>
            /// Enum FIFI for value: FI-FI
            /// </summary>
            [EnumMember(Value = "FI-FI")]
            FIFI = 13,

            /// <summary>
            /// Enum FRCA for value: FR-CA
            /// </summary>
            [EnumMember(Value = "FR-CA")]
            FRCA = 14,

            /// <summary>
            /// Enum FRFR for value: FR-FR
            /// </summary>
            [EnumMember(Value = "FR-FR")]
            FRFR = 15,

            /// <summary>
            /// Enum HIIN for value: HI-IN
            /// </summary>
            [EnumMember(Value = "HI-IN")]
            HIIN = 16,

            /// <summary>
            /// Enum HRHR for value: HR-HR
            /// </summary>
            [EnumMember(Value = "HR-HR")]
            HRHR = 17,

            /// <summary>
            /// Enum HUHU for value: HU-HU
            /// </summary>
            [EnumMember(Value = "HU-HU")]
            HUHU = 18,

            /// <summary>
            /// Enum IDID for value: ID-ID
            /// </summary>
            [EnumMember(Value = "ID-ID")]
            IDID = 19,

            /// <summary>
            /// Enum ITIT for value: IT-IT
            /// </summary>
            [EnumMember(Value = "IT-IT")]
            ITIT = 20,

            /// <summary>
            /// Enum IWIL for value: IW-IL
            /// </summary>
            [EnumMember(Value = "IW-IL")]
            IWIL = 21,

            /// <summary>
            /// Enum JAJP for value: JA-JP
            /// </summary>
            [EnumMember(Value = "JA-JP")]
            JAJP = 22,

            /// <summary>
            /// Enum KOKR for value: KO-KR
            /// </summary>
            [EnumMember(Value = "KO-KR")]
            KOKR = 23,

            /// <summary>
            /// Enum MSMY for value: MS-MY
            /// </summary>
            [EnumMember(Value = "MS-MY")]
            MSMY = 24,

            /// <summary>
            /// Enum NLNL for value: NL-NL
            /// </summary>
            [EnumMember(Value = "NL-NL")]
            NLNL = 25,

            /// <summary>
            /// Enum NONO for value: NO-NO
            /// </summary>
            [EnumMember(Value = "NO-NO")]
            NONO = 26,

            /// <summary>
            /// Enum PLPL for value: PL-PL
            /// </summary>
            [EnumMember(Value = "PL-PL")]
            PLPL = 27,

            /// <summary>
            /// Enum PTBR for value: PT-BR
            /// </summary>
            [EnumMember(Value = "PT-BR")]
            PTBR = 28,

            /// <summary>
            /// Enum PTPT for value: PT-PT
            /// </summary>
            [EnumMember(Value = "PT-PT")]
            PTPT = 29,

            /// <summary>
            /// Enum RORO for value: RO-RO
            /// </summary>
            [EnumMember(Value = "RO-RO")]
            RORO = 30,

            /// <summary>
            /// Enum RURU for value: RU-RU
            /// </summary>
            [EnumMember(Value = "RU-RU")]
            RURU = 31,

            /// <summary>
            /// Enum SKSK for value: SK-SK
            /// </summary>
            [EnumMember(Value = "SK-SK")]
            SKSK = 32,

            /// <summary>
            /// Enum SVSE for value: SV-SE
            /// </summary>
            [EnumMember(Value = "SV-SE")]
            SVSE = 33,

            /// <summary>
            /// Enum THTH for value: TH-TH
            /// </summary>
            [EnumMember(Value = "TH-TH")]
            THTH = 34,

            /// <summary>
            /// Enum TRTR for value: TR-TR
            /// </summary>
            [EnumMember(Value = "TR-TR")]
            TRTR = 35,

            /// <summary>
            /// Enum UKUA for value: UK-UA
            /// </summary>
            [EnumMember(Value = "UK-UA")]
            UKUA = 36,

            /// <summary>
            /// Enum ZHCN for value: ZH-CN
            /// </summary>
            [EnumMember(Value = "ZH-CN")]
            ZHCN = 37,

            /// <summary>
            /// Enum ZHTW for value: ZH-TW
            /// </summary>
            [EnumMember(Value = "ZH-TW")]
            ZHTW = 38,

            /// <summary>
            /// Enum ZHHK for value: ZH-HK
            /// </summary>
            [EnumMember(Value = "ZH-HK")]
            ZHHK = 39
        }


        /// <summary>
        /// Gets or Sets Locale
        /// </summary>
        [DataMember(Name = "locale", EmitDefaultValue = false)]
        public LocaleEnum? Locale { get; set; }

        /// <summary>
        /// Gets or Sets Platform
        /// </summary>
        [DataMember(Name = "platform", IsRequired = true, EmitDefaultValue = true)]
        public Platform Platform { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GameCenterMatchmakingTestRequestInlineCreateAttributes" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GameCenterMatchmakingTestRequestInlineCreateAttributes() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GameCenterMatchmakingTestRequestInlineCreateAttributes" /> class.
        /// </summary>
        /// <param name="requestName">requestName (required).</param>
        /// <param name="secondsInQueue">secondsInQueue (required).</param>
        /// <param name="locale">locale.</param>
        /// <param name="location">location.</param>
        /// <param name="minPlayers">minPlayers.</param>
        /// <param name="maxPlayers">maxPlayers.</param>
        /// <param name="playerCount">playerCount.</param>
        /// <param name="bundleId">bundleId (required).</param>
        /// <param name="platform">platform (required).</param>
        /// <param name="appVersion">appVersion (required).</param>
        public GameCenterMatchmakingTestRequestInlineCreateAttributes(string requestName = default(string), int secondsInQueue = default(int), LocaleEnum? locale = default(LocaleEnum?), Location location = default(Location), int minPlayers = default(int), int maxPlayers = default(int), int playerCount = default(int), string bundleId = default(string), Platform platform = default(Platform), string appVersion = default(string))
        {
            // to ensure "requestName" is required (not null)
            if (requestName == null)
            {
                throw new ArgumentNullException("requestName is a required property for GameCenterMatchmakingTestRequestInlineCreateAttributes and cannot be null");
            }
            this.RequestName = requestName;
            this.SecondsInQueue = secondsInQueue;
            // to ensure "bundleId" is required (not null)
            if (bundleId == null)
            {
                throw new ArgumentNullException("bundleId is a required property for GameCenterMatchmakingTestRequestInlineCreateAttributes and cannot be null");
            }
            this.BundleId = bundleId;
            this.Platform = platform;
            // to ensure "appVersion" is required (not null)
            if (appVersion == null)
            {
                throw new ArgumentNullException("appVersion is a required property for GameCenterMatchmakingTestRequestInlineCreateAttributes and cannot be null");
            }
            this.AppVersion = appVersion;
            this.Locale = locale;
            this.Location = location;
            this.MinPlayers = minPlayers;
            this.MaxPlayers = maxPlayers;
            this.PlayerCount = playerCount;
        }

        /// <summary>
        /// Gets or Sets RequestName
        /// </summary>
        [DataMember(Name = "requestName", IsRequired = true, EmitDefaultValue = true)]
        public string RequestName { get; set; }

        /// <summary>
        /// Gets or Sets SecondsInQueue
        /// </summary>
        [DataMember(Name = "secondsInQueue", IsRequired = true, EmitDefaultValue = true)]
        public int SecondsInQueue { get; set; }

        /// <summary>
        /// Gets or Sets Location
        /// </summary>
        [DataMember(Name = "location", EmitDefaultValue = false)]
        public Location Location { get; set; }

        /// <summary>
        /// Gets or Sets MinPlayers
        /// </summary>
        [DataMember(Name = "minPlayers", EmitDefaultValue = false)]
        public int MinPlayers { get; set; }

        /// <summary>
        /// Gets or Sets MaxPlayers
        /// </summary>
        [DataMember(Name = "maxPlayers", EmitDefaultValue = false)]
        public int MaxPlayers { get; set; }

        /// <summary>
        /// Gets or Sets PlayerCount
        /// </summary>
        [DataMember(Name = "playerCount", EmitDefaultValue = false)]
        public int PlayerCount { get; set; }

        /// <summary>
        /// Gets or Sets BundleId
        /// </summary>
        [DataMember(Name = "bundleId", IsRequired = true, EmitDefaultValue = true)]
        public string BundleId { get; set; }

        /// <summary>
        /// Gets or Sets AppVersion
        /// </summary>
        [DataMember(Name = "appVersion", IsRequired = true, EmitDefaultValue = true)]
        public string AppVersion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GameCenterMatchmakingTestRequestInlineCreateAttributes {\n");
            sb.Append("  RequestName: ").Append(RequestName).Append("\n");
            sb.Append("  SecondsInQueue: ").Append(SecondsInQueue).Append("\n");
            sb.Append("  Locale: ").Append(Locale).Append("\n");
            sb.Append("  Location: ").Append(Location).Append("\n");
            sb.Append("  MinPlayers: ").Append(MinPlayers).Append("\n");
            sb.Append("  MaxPlayers: ").Append(MaxPlayers).Append("\n");
            sb.Append("  PlayerCount: ").Append(PlayerCount).Append("\n");
            sb.Append("  BundleId: ").Append(BundleId).Append("\n");
            sb.Append("  Platform: ").Append(Platform).Append("\n");
            sb.Append("  AppVersion: ").Append(AppVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
