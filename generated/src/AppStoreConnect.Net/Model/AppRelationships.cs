/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// AppRelationships
    /// </summary>
    [DataContract(Name = "App_relationships")]
    public partial class AppRelationships : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppRelationships" /> class.
        /// </summary>
        /// <param name="appEncryptionDeclarations">appEncryptionDeclarations.</param>
        /// <param name="ciProduct">ciProduct.</param>
        /// <param name="betaTesters">betaTesters.</param>
        /// <param name="betaGroups">betaGroups.</param>
        /// <param name="appStoreVersions">appStoreVersions.</param>
        /// <param name="preReleaseVersions">preReleaseVersions.</param>
        /// <param name="betaAppLocalizations">betaAppLocalizations.</param>
        /// <param name="builds">builds.</param>
        /// <param name="betaLicenseAgreement">betaLicenseAgreement.</param>
        /// <param name="betaAppReviewDetail">betaAppReviewDetail.</param>
        /// <param name="appInfos">appInfos.</param>
        /// <param name="appClips">appClips.</param>
        /// <param name="appPricePoints">appPricePoints.</param>
        /// <param name="endUserLicenseAgreement">endUserLicenseAgreement.</param>
        /// <param name="preOrder">preOrder.</param>
        /// <param name="appPriceSchedule">appPriceSchedule.</param>
        /// <param name="appAvailability">appAvailability.</param>
        /// <param name="appAvailabilityV2">appAvailabilityV2.</param>
        /// <param name="inAppPurchases">inAppPurchases.</param>
        /// <param name="subscriptionGroups">subscriptionGroups.</param>
        /// <param name="gameCenterEnabledVersions">gameCenterEnabledVersions.</param>
        /// <param name="perfPowerMetrics">perfPowerMetrics.</param>
        /// <param name="appCustomProductPages">appCustomProductPages.</param>
        /// <param name="inAppPurchasesV2">inAppPurchasesV2.</param>
        /// <param name="promotedPurchases">promotedPurchases.</param>
        /// <param name="appEvents">appEvents.</param>
        /// <param name="reviewSubmissions">reviewSubmissions.</param>
        /// <param name="subscriptionGracePeriod">subscriptionGracePeriod.</param>
        /// <param name="customerReviews">customerReviews.</param>
        /// <param name="gameCenterDetail">gameCenterDetail.</param>
        /// <param name="appStoreVersionExperimentsV2">appStoreVersionExperimentsV2.</param>
        /// <param name="alternativeDistributionKey">alternativeDistributionKey.</param>
        /// <param name="analyticsReportRequests">analyticsReportRequests.</param>
        /// <param name="marketplaceSearchDetail">marketplaceSearchDetail.</param>
        public AppRelationships(AppRelationshipsAppEncryptionDeclarations appEncryptionDeclarations = default(AppRelationshipsAppEncryptionDeclarations), AppRelationshipsCiProduct ciProduct = default(AppRelationshipsCiProduct), AnalyticsReportInstanceRelationshipsSegments betaTesters = default(AnalyticsReportInstanceRelationshipsSegments), AppRelationshipsBetaGroups betaGroups = default(AppRelationshipsBetaGroups), AppRelationshipsAppStoreVersions appStoreVersions = default(AppRelationshipsAppStoreVersions), AppRelationshipsPreReleaseVersions preReleaseVersions = default(AppRelationshipsPreReleaseVersions), AppRelationshipsBetaAppLocalizations betaAppLocalizations = default(AppRelationshipsBetaAppLocalizations), AppRelationshipsBuilds builds = default(AppRelationshipsBuilds), AppRelationshipsBetaLicenseAgreement betaLicenseAgreement = default(AppRelationshipsBetaLicenseAgreement), AppRelationshipsBetaAppReviewDetail betaAppReviewDetail = default(AppRelationshipsBetaAppReviewDetail), AppRelationshipsAppInfos appInfos = default(AppRelationshipsAppInfos), AppRelationshipsAppClips appClips = default(AppRelationshipsAppClips), AnalyticsReportInstanceRelationshipsSegments appPricePoints = default(AnalyticsReportInstanceRelationshipsSegments), AppRelationshipsEndUserLicenseAgreement endUserLicenseAgreement = default(AppRelationshipsEndUserLicenseAgreement), AppRelationshipsPreOrder preOrder = default(AppRelationshipsPreOrder), AnalyticsReportInstanceRelationshipsSegments appPriceSchedule = default(AnalyticsReportInstanceRelationshipsSegments), AnalyticsReportInstanceRelationshipsSegments appAvailability = default(AnalyticsReportInstanceRelationshipsSegments), AnalyticsReportInstanceRelationshipsSegments appAvailabilityV2 = default(AnalyticsReportInstanceRelationshipsSegments), AppRelationshipsInAppPurchases inAppPurchases = default(AppRelationshipsInAppPurchases), AppRelationshipsSubscriptionGroups subscriptionGroups = default(AppRelationshipsSubscriptionGroups), AppRelationshipsGameCenterEnabledVersions gameCenterEnabledVersions = default(AppRelationshipsGameCenterEnabledVersions), AnalyticsReportInstanceRelationshipsSegments perfPowerMetrics = default(AnalyticsReportInstanceRelationshipsSegments), AppRelationshipsAppCustomProductPages appCustomProductPages = default(AppRelationshipsAppCustomProductPages), AppRelationshipsInAppPurchasesV2 inAppPurchasesV2 = default(AppRelationshipsInAppPurchasesV2), AppRelationshipsPromotedPurchases promotedPurchases = default(AppRelationshipsPromotedPurchases), AppRelationshipsAppEvents appEvents = default(AppRelationshipsAppEvents), AppRelationshipsReviewSubmissions reviewSubmissions = default(AppRelationshipsReviewSubmissions), AppRelationshipsSubscriptionGracePeriod subscriptionGracePeriod = default(AppRelationshipsSubscriptionGracePeriod), AnalyticsReportInstanceRelationshipsSegments customerReviews = default(AnalyticsReportInstanceRelationshipsSegments), AppRelationshipsGameCenterDetail gameCenterDetail = default(AppRelationshipsGameCenterDetail), AppStoreVersionRelationshipsAppStoreVersionExperiments appStoreVersionExperimentsV2 = default(AppStoreVersionRelationshipsAppStoreVersionExperiments), AnalyticsReportInstanceRelationshipsSegments alternativeDistributionKey = default(AnalyticsReportInstanceRelationshipsSegments), AnalyticsReportInstanceRelationshipsSegments analyticsReportRequests = default(AnalyticsReportInstanceRelationshipsSegments), AnalyticsReportInstanceRelationshipsSegments marketplaceSearchDetail = default(AnalyticsReportInstanceRelationshipsSegments))
        {
            this.AppEncryptionDeclarations = appEncryptionDeclarations;
            this.CiProduct = ciProduct;
            this.BetaTesters = betaTesters;
            this.BetaGroups = betaGroups;
            this.AppStoreVersions = appStoreVersions;
            this.PreReleaseVersions = preReleaseVersions;
            this.BetaAppLocalizations = betaAppLocalizations;
            this.Builds = builds;
            this.BetaLicenseAgreement = betaLicenseAgreement;
            this.BetaAppReviewDetail = betaAppReviewDetail;
            this.AppInfos = appInfos;
            this.AppClips = appClips;
            this.AppPricePoints = appPricePoints;
            this.EndUserLicenseAgreement = endUserLicenseAgreement;
            this.PreOrder = preOrder;
            this.AppPriceSchedule = appPriceSchedule;
            this.AppAvailability = appAvailability;
            this.AppAvailabilityV2 = appAvailabilityV2;
            this.InAppPurchases = inAppPurchases;
            this.SubscriptionGroups = subscriptionGroups;
            this.GameCenterEnabledVersions = gameCenterEnabledVersions;
            this.PerfPowerMetrics = perfPowerMetrics;
            this.AppCustomProductPages = appCustomProductPages;
            this.InAppPurchasesV2 = inAppPurchasesV2;
            this.PromotedPurchases = promotedPurchases;
            this.AppEvents = appEvents;
            this.ReviewSubmissions = reviewSubmissions;
            this.SubscriptionGracePeriod = subscriptionGracePeriod;
            this.CustomerReviews = customerReviews;
            this.GameCenterDetail = gameCenterDetail;
            this.AppStoreVersionExperimentsV2 = appStoreVersionExperimentsV2;
            this.AlternativeDistributionKey = alternativeDistributionKey;
            this.AnalyticsReportRequests = analyticsReportRequests;
            this.MarketplaceSearchDetail = marketplaceSearchDetail;
        }

        /// <summary>
        /// Gets or Sets AppEncryptionDeclarations
        /// </summary>
        [DataMember(Name = "appEncryptionDeclarations", EmitDefaultValue = false)]
        public AppRelationshipsAppEncryptionDeclarations AppEncryptionDeclarations { get; set; }

        /// <summary>
        /// Gets or Sets CiProduct
        /// </summary>
        [DataMember(Name = "ciProduct", EmitDefaultValue = false)]
        public AppRelationshipsCiProduct CiProduct { get; set; }

        /// <summary>
        /// Gets or Sets BetaTesters
        /// </summary>
        [DataMember(Name = "betaTesters", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments BetaTesters { get; set; }

        /// <summary>
        /// Gets or Sets BetaGroups
        /// </summary>
        [DataMember(Name = "betaGroups", EmitDefaultValue = false)]
        public AppRelationshipsBetaGroups BetaGroups { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreVersions
        /// </summary>
        [DataMember(Name = "appStoreVersions", EmitDefaultValue = false)]
        public AppRelationshipsAppStoreVersions AppStoreVersions { get; set; }

        /// <summary>
        /// Gets or Sets PreReleaseVersions
        /// </summary>
        [DataMember(Name = "preReleaseVersions", EmitDefaultValue = false)]
        public AppRelationshipsPreReleaseVersions PreReleaseVersions { get; set; }

        /// <summary>
        /// Gets or Sets BetaAppLocalizations
        /// </summary>
        [DataMember(Name = "betaAppLocalizations", EmitDefaultValue = false)]
        public AppRelationshipsBetaAppLocalizations BetaAppLocalizations { get; set; }

        /// <summary>
        /// Gets or Sets Builds
        /// </summary>
        [DataMember(Name = "builds", EmitDefaultValue = false)]
        public AppRelationshipsBuilds Builds { get; set; }

        /// <summary>
        /// Gets or Sets BetaLicenseAgreement
        /// </summary>
        [DataMember(Name = "betaLicenseAgreement", EmitDefaultValue = false)]
        public AppRelationshipsBetaLicenseAgreement BetaLicenseAgreement { get; set; }

        /// <summary>
        /// Gets or Sets BetaAppReviewDetail
        /// </summary>
        [DataMember(Name = "betaAppReviewDetail", EmitDefaultValue = false)]
        public AppRelationshipsBetaAppReviewDetail BetaAppReviewDetail { get; set; }

        /// <summary>
        /// Gets or Sets AppInfos
        /// </summary>
        [DataMember(Name = "appInfos", EmitDefaultValue = false)]
        public AppRelationshipsAppInfos AppInfos { get; set; }

        /// <summary>
        /// Gets or Sets AppClips
        /// </summary>
        [DataMember(Name = "appClips", EmitDefaultValue = false)]
        public AppRelationshipsAppClips AppClips { get; set; }

        /// <summary>
        /// Gets or Sets AppPricePoints
        /// </summary>
        [DataMember(Name = "appPricePoints", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments AppPricePoints { get; set; }

        /// <summary>
        /// Gets or Sets EndUserLicenseAgreement
        /// </summary>
        [DataMember(Name = "endUserLicenseAgreement", EmitDefaultValue = false)]
        public AppRelationshipsEndUserLicenseAgreement EndUserLicenseAgreement { get; set; }

        /// <summary>
        /// Gets or Sets PreOrder
        /// </summary>
        [DataMember(Name = "preOrder", EmitDefaultValue = false)]
        public AppRelationshipsPreOrder PreOrder { get; set; }

        /// <summary>
        /// Gets or Sets AppPriceSchedule
        /// </summary>
        [DataMember(Name = "appPriceSchedule", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments AppPriceSchedule { get; set; }

        /// <summary>
        /// Gets or Sets AppAvailability
        /// </summary>
        [DataMember(Name = "appAvailability", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments AppAvailability { get; set; }

        /// <summary>
        /// Gets or Sets AppAvailabilityV2
        /// </summary>
        [DataMember(Name = "appAvailabilityV2", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments AppAvailabilityV2 { get; set; }

        /// <summary>
        /// Gets or Sets InAppPurchases
        /// </summary>
        [DataMember(Name = "inAppPurchases", EmitDefaultValue = false)]
        [Obsolete]
        public AppRelationshipsInAppPurchases InAppPurchases { get; set; }

        /// <summary>
        /// Gets or Sets SubscriptionGroups
        /// </summary>
        [DataMember(Name = "subscriptionGroups", EmitDefaultValue = false)]
        public AppRelationshipsSubscriptionGroups SubscriptionGroups { get; set; }

        /// <summary>
        /// Gets or Sets GameCenterEnabledVersions
        /// </summary>
        [DataMember(Name = "gameCenterEnabledVersions", EmitDefaultValue = false)]
        public AppRelationshipsGameCenterEnabledVersions GameCenterEnabledVersions { get; set; }

        /// <summary>
        /// Gets or Sets PerfPowerMetrics
        /// </summary>
        [DataMember(Name = "perfPowerMetrics", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments PerfPowerMetrics { get; set; }

        /// <summary>
        /// Gets or Sets AppCustomProductPages
        /// </summary>
        [DataMember(Name = "appCustomProductPages", EmitDefaultValue = false)]
        public AppRelationshipsAppCustomProductPages AppCustomProductPages { get; set; }

        /// <summary>
        /// Gets or Sets InAppPurchasesV2
        /// </summary>
        [DataMember(Name = "inAppPurchasesV2", EmitDefaultValue = false)]
        public AppRelationshipsInAppPurchasesV2 InAppPurchasesV2 { get; set; }

        /// <summary>
        /// Gets or Sets PromotedPurchases
        /// </summary>
        [DataMember(Name = "promotedPurchases", EmitDefaultValue = false)]
        public AppRelationshipsPromotedPurchases PromotedPurchases { get; set; }

        /// <summary>
        /// Gets or Sets AppEvents
        /// </summary>
        [DataMember(Name = "appEvents", EmitDefaultValue = false)]
        public AppRelationshipsAppEvents AppEvents { get; set; }

        /// <summary>
        /// Gets or Sets ReviewSubmissions
        /// </summary>
        [DataMember(Name = "reviewSubmissions", EmitDefaultValue = false)]
        public AppRelationshipsReviewSubmissions ReviewSubmissions { get; set; }

        /// <summary>
        /// Gets or Sets SubscriptionGracePeriod
        /// </summary>
        [DataMember(Name = "subscriptionGracePeriod", EmitDefaultValue = false)]
        public AppRelationshipsSubscriptionGracePeriod SubscriptionGracePeriod { get; set; }

        /// <summary>
        /// Gets or Sets CustomerReviews
        /// </summary>
        [DataMember(Name = "customerReviews", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments CustomerReviews { get; set; }

        /// <summary>
        /// Gets or Sets GameCenterDetail
        /// </summary>
        [DataMember(Name = "gameCenterDetail", EmitDefaultValue = false)]
        public AppRelationshipsGameCenterDetail GameCenterDetail { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreVersionExperimentsV2
        /// </summary>
        [DataMember(Name = "appStoreVersionExperimentsV2", EmitDefaultValue = false)]
        public AppStoreVersionRelationshipsAppStoreVersionExperiments AppStoreVersionExperimentsV2 { get; set; }

        /// <summary>
        /// Gets or Sets AlternativeDistributionKey
        /// </summary>
        [DataMember(Name = "alternativeDistributionKey", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments AlternativeDistributionKey { get; set; }

        /// <summary>
        /// Gets or Sets AnalyticsReportRequests
        /// </summary>
        [DataMember(Name = "analyticsReportRequests", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments AnalyticsReportRequests { get; set; }

        /// <summary>
        /// Gets or Sets MarketplaceSearchDetail
        /// </summary>
        [DataMember(Name = "marketplaceSearchDetail", EmitDefaultValue = false)]
        public AnalyticsReportInstanceRelationshipsSegments MarketplaceSearchDetail { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AppRelationships {\n");
            sb.Append("  AppEncryptionDeclarations: ").Append(AppEncryptionDeclarations).Append("\n");
            sb.Append("  CiProduct: ").Append(CiProduct).Append("\n");
            sb.Append("  BetaTesters: ").Append(BetaTesters).Append("\n");
            sb.Append("  BetaGroups: ").Append(BetaGroups).Append("\n");
            sb.Append("  AppStoreVersions: ").Append(AppStoreVersions).Append("\n");
            sb.Append("  PreReleaseVersions: ").Append(PreReleaseVersions).Append("\n");
            sb.Append("  BetaAppLocalizations: ").Append(BetaAppLocalizations).Append("\n");
            sb.Append("  Builds: ").Append(Builds).Append("\n");
            sb.Append("  BetaLicenseAgreement: ").Append(BetaLicenseAgreement).Append("\n");
            sb.Append("  BetaAppReviewDetail: ").Append(BetaAppReviewDetail).Append("\n");
            sb.Append("  AppInfos: ").Append(AppInfos).Append("\n");
            sb.Append("  AppClips: ").Append(AppClips).Append("\n");
            sb.Append("  AppPricePoints: ").Append(AppPricePoints).Append("\n");
            sb.Append("  EndUserLicenseAgreement: ").Append(EndUserLicenseAgreement).Append("\n");
            sb.Append("  PreOrder: ").Append(PreOrder).Append("\n");
            sb.Append("  AppPriceSchedule: ").Append(AppPriceSchedule).Append("\n");
            sb.Append("  AppAvailability: ").Append(AppAvailability).Append("\n");
            sb.Append("  AppAvailabilityV2: ").Append(AppAvailabilityV2).Append("\n");
            sb.Append("  InAppPurchases: ").Append(InAppPurchases).Append("\n");
            sb.Append("  SubscriptionGroups: ").Append(SubscriptionGroups).Append("\n");
            sb.Append("  GameCenterEnabledVersions: ").Append(GameCenterEnabledVersions).Append("\n");
            sb.Append("  PerfPowerMetrics: ").Append(PerfPowerMetrics).Append("\n");
            sb.Append("  AppCustomProductPages: ").Append(AppCustomProductPages).Append("\n");
            sb.Append("  InAppPurchasesV2: ").Append(InAppPurchasesV2).Append("\n");
            sb.Append("  PromotedPurchases: ").Append(PromotedPurchases).Append("\n");
            sb.Append("  AppEvents: ").Append(AppEvents).Append("\n");
            sb.Append("  ReviewSubmissions: ").Append(ReviewSubmissions).Append("\n");
            sb.Append("  SubscriptionGracePeriod: ").Append(SubscriptionGracePeriod).Append("\n");
            sb.Append("  CustomerReviews: ").Append(CustomerReviews).Append("\n");
            sb.Append("  GameCenterDetail: ").Append(GameCenterDetail).Append("\n");
            sb.Append("  AppStoreVersionExperimentsV2: ").Append(AppStoreVersionExperimentsV2).Append("\n");
            sb.Append("  AlternativeDistributionKey: ").Append(AlternativeDistributionKey).Append("\n");
            sb.Append("  AnalyticsReportRequests: ").Append(AnalyticsReportRequests).Append("\n");
            sb.Append("  MarketplaceSearchDetail: ").Append(MarketplaceSearchDetail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
