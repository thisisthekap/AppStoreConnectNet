/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Net.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Net.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Net.Model
{
    /// <summary>
    /// XcodeMetricsProductDataInnerMetricCategoriesInnerMetricsInnerDatasetsInnerPointsInner
    /// </summary>
    [DataContract(Name = "xcodeMetrics_productData_inner_metricCategories_inner_metrics_inner_datasets_inner_points_inner")]
    public partial class XcodeMetricsProductDataInnerMetricCategoriesInnerMetricsInnerDatasetsInnerPointsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="XcodeMetricsProductDataInnerMetricCategoriesInnerMetricsInnerDatasetsInnerPointsInner" /> class.
        /// </summary>
        /// <param name="varVersion">varVersion.</param>
        /// <param name="value">value.</param>
        /// <param name="errorMargin">errorMargin.</param>
        /// <param name="percentageBreakdown">percentageBreakdown.</param>
        /// <param name="goal">goal.</param>
        public XcodeMetricsProductDataInnerMetricCategoriesInnerMetricsInnerDatasetsInnerPointsInner(string varVersion = default(string), decimal value = default(decimal), decimal errorMargin = default(decimal), XcodeMetricsProductDataInnerMetricCategoriesInnerMetricsInnerDatasetsInnerPointsInnerPercentageBreakdown percentageBreakdown = default(XcodeMetricsProductDataInnerMetricCategoriesInnerMetricsInnerDatasetsInnerPointsInnerPercentageBreakdown), string goal = default(string))
        {
            this.VarVersion = varVersion;
            this.Value = value;
            this.ErrorMargin = errorMargin;
            this.PercentageBreakdown = percentageBreakdown;
            this.Goal = goal;
        }

        /// <summary>
        /// Gets or Sets VarVersion
        /// </summary>
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public string VarVersion { get; set; }

        /// <summary>
        /// Gets or Sets Value
        /// </summary>
        [DataMember(Name = "value", EmitDefaultValue = false)]
        public decimal Value { get; set; }

        /// <summary>
        /// Gets or Sets ErrorMargin
        /// </summary>
        [DataMember(Name = "errorMargin", EmitDefaultValue = false)]
        public decimal ErrorMargin { get; set; }

        /// <summary>
        /// Gets or Sets PercentageBreakdown
        /// </summary>
        [DataMember(Name = "percentageBreakdown", EmitDefaultValue = false)]
        public XcodeMetricsProductDataInnerMetricCategoriesInnerMetricsInnerDatasetsInnerPointsInnerPercentageBreakdown PercentageBreakdown { get; set; }

        /// <summary>
        /// Gets or Sets Goal
        /// </summary>
        [DataMember(Name = "goal", EmitDefaultValue = false)]
        public string Goal { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class XcodeMetricsProductDataInnerMetricCategoriesInnerMetricsInnerDatasetsInnerPointsInner {\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  ErrorMargin: ").Append(ErrorMargin).Append("\n");
            sb.Append("  PercentageBreakdown: ").Append(PercentageBreakdown).Append("\n");
            sb.Append("  Goal: ").Append(Goal).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
