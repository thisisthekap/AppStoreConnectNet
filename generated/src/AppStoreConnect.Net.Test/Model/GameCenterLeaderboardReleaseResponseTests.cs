/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using AppStoreConnect.Net.Model;
using AppStoreConnect.Net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace AppStoreConnect.Net.Test.Model
{
    /// <summary>
    ///  Class for testing GameCenterLeaderboardReleaseResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GameCenterLeaderboardReleaseResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GameCenterLeaderboardReleaseResponse
        //private GameCenterLeaderboardReleaseResponse instance;

        public GameCenterLeaderboardReleaseResponseTests()
        {
            // TODO uncomment below to create an instance of GameCenterLeaderboardReleaseResponse
            //instance = new GameCenterLeaderboardReleaseResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GameCenterLeaderboardReleaseResponse
        /// </summary>
        [Fact]
        public void GameCenterLeaderboardReleaseResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" GameCenterLeaderboardReleaseResponse
            //Assert.IsType<GameCenterLeaderboardReleaseResponse>(instance);
        }

        /// <summary>
        /// Test the property 'Data'
        /// </summary>
        [Fact]
        public void DataTest()
        {
            // TODO unit test for the property 'Data'
        }

        /// <summary>
        /// Test the property 'Included'
        /// </summary>
        [Fact]
        public void IncludedTest()
        {
            // TODO unit test for the property 'Included'
        }

        /// <summary>
        /// Test the property 'Links'
        /// </summary>
        [Fact]
        public void LinksTest()
        {
            // TODO unit test for the property 'Links'
        }
    }
}
