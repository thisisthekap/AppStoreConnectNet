/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Net.Client;
using AppStoreConnect.Net.Api;
// uncomment below to import models
//using AppStoreConnect.Net.Model;

namespace AppStoreConnect.Net.Test.Api
{
    /// <summary>
    ///  Class for testing GameCenterMatchmakingRuleSetsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GameCenterMatchmakingRuleSetsApiTests : IDisposable
    {
        private GameCenterMatchmakingRuleSetsApi instance;

        public GameCenterMatchmakingRuleSetsApiTests()
        {
            instance = new GameCenterMatchmakingRuleSetsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GameCenterMatchmakingRuleSetsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' GameCenterMatchmakingRuleSetsApi
            //Assert.IsType<GameCenterMatchmakingRuleSetsApi>(instance);
        }

        /// <summary>
        /// Test GameCenterMatchmakingRuleSetsCreateInstance
        /// </summary>
        [Fact]
        public void GameCenterMatchmakingRuleSetsCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GameCenterMatchmakingRuleSetCreateRequest gameCenterMatchmakingRuleSetCreateRequest = null;
            //var response = instance.GameCenterMatchmakingRuleSetsCreateInstance(gameCenterMatchmakingRuleSetCreateRequest);
            //Assert.IsType<GameCenterMatchmakingRuleSetResponse>(response);
        }

        /// <summary>
        /// Test GameCenterMatchmakingRuleSetsDeleteInstance
        /// </summary>
        [Fact]
        public void GameCenterMatchmakingRuleSetsDeleteInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.GameCenterMatchmakingRuleSetsDeleteInstance(id);
        }

        /// <summary>
        /// Test GameCenterMatchmakingRuleSetsGetCollection
        /// </summary>
        [Fact]
        public void GameCenterMatchmakingRuleSetsGetCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? fieldsGameCenterMatchmakingRuleSets = null;
            //List<string>? fieldsGameCenterMatchmakingTeams = null;
            //List<string>? fieldsGameCenterMatchmakingRules = null;
            //List<string>? fieldsGameCenterMatchmakingQueues = null;
            //int? limit = null;
            //List<string>? include = null;
            //int? limitMatchmakingQueues = null;
            //int? limitRules = null;
            //int? limitTeams = null;
            //var response = instance.GameCenterMatchmakingRuleSetsGetCollection(fieldsGameCenterMatchmakingRuleSets, fieldsGameCenterMatchmakingTeams, fieldsGameCenterMatchmakingRules, fieldsGameCenterMatchmakingQueues, limit, include, limitMatchmakingQueues, limitRules, limitTeams);
            //Assert.IsType<GameCenterMatchmakingRuleSetsResponse>(response);
        }

        /// <summary>
        /// Test GameCenterMatchmakingRuleSetsGetInstance
        /// </summary>
        [Fact]
        public void GameCenterMatchmakingRuleSetsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsGameCenterMatchmakingRuleSets = null;
            //List<string>? fieldsGameCenterMatchmakingTeams = null;
            //List<string>? fieldsGameCenterMatchmakingRules = null;
            //List<string>? fieldsGameCenterMatchmakingQueues = null;
            //List<string>? include = null;
            //int? limitMatchmakingQueues = null;
            //int? limitRules = null;
            //int? limitTeams = null;
            //var response = instance.GameCenterMatchmakingRuleSetsGetInstance(id, fieldsGameCenterMatchmakingRuleSets, fieldsGameCenterMatchmakingTeams, fieldsGameCenterMatchmakingRules, fieldsGameCenterMatchmakingQueues, include, limitMatchmakingQueues, limitRules, limitTeams);
            //Assert.IsType<GameCenterMatchmakingRuleSetResponse>(response);
        }

        /// <summary>
        /// Test GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelated
        /// </summary>
        [Fact]
        public void GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsGameCenterMatchmakingQueues = null;
            //List<string>? fieldsGameCenterMatchmakingRuleSets = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelated(id, fieldsGameCenterMatchmakingQueues, fieldsGameCenterMatchmakingRuleSets, limit, include);
            //Assert.IsType<GameCenterMatchmakingQueuesResponse>(response);
        }

        /// <summary>
        /// Test GameCenterMatchmakingRuleSetsRulesGetToManyRelated
        /// </summary>
        [Fact]
        public void GameCenterMatchmakingRuleSetsRulesGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsGameCenterMatchmakingRules = null;
            //int? limit = null;
            //var response = instance.GameCenterMatchmakingRuleSetsRulesGetToManyRelated(id, fieldsGameCenterMatchmakingRules, limit);
            //Assert.IsType<GameCenterMatchmakingRulesResponse>(response);
        }

        /// <summary>
        /// Test GameCenterMatchmakingRuleSetsTeamsGetToManyRelated
        /// </summary>
        [Fact]
        public void GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsGameCenterMatchmakingTeams = null;
            //int? limit = null;
            //var response = instance.GameCenterMatchmakingRuleSetsTeamsGetToManyRelated(id, fieldsGameCenterMatchmakingTeams, limit);
            //Assert.IsType<GameCenterMatchmakingTeamsResponse>(response);
        }

        /// <summary>
        /// Test GameCenterMatchmakingRuleSetsUpdateInstance
        /// </summary>
        [Fact]
        public void GameCenterMatchmakingRuleSetsUpdateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //GameCenterMatchmakingRuleSetUpdateRequest gameCenterMatchmakingRuleSetUpdateRequest = null;
            //var response = instance.GameCenterMatchmakingRuleSetsUpdateInstance(id, gameCenterMatchmakingRuleSetUpdateRequest);
            //Assert.IsType<GameCenterMatchmakingRuleSetResponse>(response);
        }
    }
}
