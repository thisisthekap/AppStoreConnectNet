/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Net.Client;
using AppStoreConnect.Net.Api;
// uncomment below to import models
//using AppStoreConnect.Net.Model;

namespace AppStoreConnect.Net.Test.Api
{
    /// <summary>
    ///  Class for testing GameCenterAppVersionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GameCenterAppVersionsApiTests : IDisposable
    {
        private GameCenterAppVersionsApi instance;

        public GameCenterAppVersionsApiTests()
        {
            instance = new GameCenterAppVersionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GameCenterAppVersionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' GameCenterAppVersionsApi
            //Assert.IsType<GameCenterAppVersionsApi>(instance);
        }

        /// <summary>
        /// Test GameCenterAppVersionsAppStoreVersionGetToOneRelated
        /// </summary>
        [Fact]
        public void GameCenterAppVersionsAppStoreVersionGetToOneRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsAppStoreVersions = null;
            //List<string>? fieldsApps = null;
            //List<string>? fieldsAgeRatingDeclarations = null;
            //List<string>? fieldsAppStoreVersionLocalizations = null;
            //List<string>? fieldsBuilds = null;
            //List<string>? fieldsAppStoreVersionPhasedReleases = null;
            //List<string>? fieldsGameCenterAppVersions = null;
            //List<string>? fieldsRoutingAppCoverages = null;
            //List<string>? fieldsAppStoreReviewDetails = null;
            //List<string>? fieldsAppStoreVersionSubmissions = null;
            //List<string>? fieldsAppClipDefaultExperiences = null;
            //List<string>? fieldsAppStoreVersionExperiments = null;
            //List<string>? fieldsAlternativeDistributionPackages = null;
            //List<string>? include = null;
            //int? limitAppStoreVersionLocalizations = null;
            //int? limitAppStoreVersionExperiments = null;
            //int? limitAppStoreVersionExperimentsV2 = null;
            //var response = instance.GameCenterAppVersionsAppStoreVersionGetToOneRelated(id, fieldsAppStoreVersions, fieldsApps, fieldsAgeRatingDeclarations, fieldsAppStoreVersionLocalizations, fieldsBuilds, fieldsAppStoreVersionPhasedReleases, fieldsGameCenterAppVersions, fieldsRoutingAppCoverages, fieldsAppStoreReviewDetails, fieldsAppStoreVersionSubmissions, fieldsAppClipDefaultExperiences, fieldsAppStoreVersionExperiments, fieldsAlternativeDistributionPackages, include, limitAppStoreVersionLocalizations, limitAppStoreVersionExperiments, limitAppStoreVersionExperimentsV2);
            //Assert.IsType<AppStoreVersionResponse>(response);
        }

        /// <summary>
        /// Test GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationship
        /// </summary>
        [Fact]
        public void GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationshipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //GameCenterAppVersionCompatibilityVersionsLinkagesRequest gameCenterAppVersionCompatibilityVersionsLinkagesRequest = null;
            //instance.GameCenterAppVersionsCompatibilityVersionsCreateToManyRelationship(id, gameCenterAppVersionCompatibilityVersionsLinkagesRequest);
        }

        /// <summary>
        /// Test GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationship
        /// </summary>
        [Fact]
        public void GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationshipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //GameCenterAppVersionCompatibilityVersionsLinkagesRequest gameCenterAppVersionCompatibilityVersionsLinkagesRequest = null;
            //instance.GameCenterAppVersionsCompatibilityVersionsDeleteToManyRelationship(id, gameCenterAppVersionCompatibilityVersionsLinkagesRequest);
        }

        /// <summary>
        /// Test GameCenterAppVersionsCompatibilityVersionsGetToManyRelated
        /// </summary>
        [Fact]
        public void GameCenterAppVersionsCompatibilityVersionsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterEnabled = null;
            //List<string>? fieldsGameCenterAppVersions = null;
            //List<string>? fieldsAppStoreVersions = null;
            //int? limit = null;
            //List<string>? include = null;
            //int? limitCompatibilityVersions = null;
            //var response = instance.GameCenterAppVersionsCompatibilityVersionsGetToManyRelated(id, filterEnabled, fieldsGameCenterAppVersions, fieldsAppStoreVersions, limit, include, limitCompatibilityVersions);
            //Assert.IsType<GameCenterAppVersionsResponse>(response);
        }

        /// <summary>
        /// Test GameCenterAppVersionsCompatibilityVersionsGetToManyRelationship
        /// </summary>
        [Fact]
        public void GameCenterAppVersionsCompatibilityVersionsGetToManyRelationshipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //int? limit = null;
            //var response = instance.GameCenterAppVersionsCompatibilityVersionsGetToManyRelationship(id, limit);
            //Assert.IsType<GameCenterAppVersionCompatibilityVersionsLinkagesResponse>(response);
        }

        /// <summary>
        /// Test GameCenterAppVersionsCreateInstance
        /// </summary>
        [Fact]
        public void GameCenterAppVersionsCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GameCenterAppVersionCreateRequest gameCenterAppVersionCreateRequest = null;
            //var response = instance.GameCenterAppVersionsCreateInstance(gameCenterAppVersionCreateRequest);
            //Assert.IsType<GameCenterAppVersionResponse>(response);
        }

        /// <summary>
        /// Test GameCenterAppVersionsGetInstance
        /// </summary>
        [Fact]
        public void GameCenterAppVersionsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsGameCenterAppVersions = null;
            //List<string>? fieldsAppStoreVersions = null;
            //List<string>? include = null;
            //int? limitCompatibilityVersions = null;
            //var response = instance.GameCenterAppVersionsGetInstance(id, fieldsGameCenterAppVersions, fieldsAppStoreVersions, include, limitCompatibilityVersions);
            //Assert.IsType<GameCenterAppVersionResponse>(response);
        }

        /// <summary>
        /// Test GameCenterAppVersionsUpdateInstance
        /// </summary>
        [Fact]
        public void GameCenterAppVersionsUpdateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //GameCenterAppVersionUpdateRequest gameCenterAppVersionUpdateRequest = null;
            //var response = instance.GameCenterAppVersionsUpdateInstance(id, gameCenterAppVersionUpdateRequest);
            //Assert.IsType<GameCenterAppVersionResponse>(response);
        }
    }
}
