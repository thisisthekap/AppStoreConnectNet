/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Net.Client;
using AppStoreConnect.Net.Api;
// uncomment below to import models
//using AppStoreConnect.Net.Model;

namespace AppStoreConnect.Net.Test.Api
{
    /// <summary>
    ///  Class for testing WinBackOffersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WinBackOffersApiTests : IDisposable
    {
        private WinBackOffersApi instance;

        public WinBackOffersApiTests()
        {
            instance = new WinBackOffersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WinBackOffersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' WinBackOffersApi
            //Assert.IsType<WinBackOffersApi>(instance);
        }

        /// <summary>
        /// Test WinBackOffersCreateInstance
        /// </summary>
        [Fact]
        public void WinBackOffersCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WinBackOfferCreateRequest winBackOfferCreateRequest = null;
            //var response = instance.WinBackOffersCreateInstance(winBackOfferCreateRequest);
            //Assert.IsType<WinBackOfferResponse>(response);
        }

        /// <summary>
        /// Test WinBackOffersDeleteInstance
        /// </summary>
        [Fact]
        public void WinBackOffersDeleteInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.WinBackOffersDeleteInstance(id);
        }

        /// <summary>
        /// Test WinBackOffersGetInstance
        /// </summary>
        [Fact]
        public void WinBackOffersGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsWinBackOffers = null;
            //List<string>? fieldsWinBackOfferPrices = null;
            //List<string>? include = null;
            //int? limitPrices = null;
            //var response = instance.WinBackOffersGetInstance(id, fieldsWinBackOffers, fieldsWinBackOfferPrices, include, limitPrices);
            //Assert.IsType<WinBackOfferResponse>(response);
        }

        /// <summary>
        /// Test WinBackOffersPricesGetToManyRelated
        /// </summary>
        [Fact]
        public void WinBackOffersPricesGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterTerritory = null;
            //List<string>? fieldsWinBackOfferPrices = null;
            //List<string>? fieldsTerritories = null;
            //List<string>? fieldsSubscriptionPricePoints = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.WinBackOffersPricesGetToManyRelated(id, filterTerritory, fieldsWinBackOfferPrices, fieldsTerritories, fieldsSubscriptionPricePoints, limit, include);
            //Assert.IsType<WinBackOfferPricesResponse>(response);
        }

        /// <summary>
        /// Test WinBackOffersUpdateInstance
        /// </summary>
        [Fact]
        public void WinBackOffersUpdateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //WinBackOfferUpdateRequest winBackOfferUpdateRequest = null;
            //var response = instance.WinBackOffersUpdateInstance(id, winBackOfferUpdateRequest);
            //Assert.IsType<WinBackOfferResponse>(response);
        }
    }
}
