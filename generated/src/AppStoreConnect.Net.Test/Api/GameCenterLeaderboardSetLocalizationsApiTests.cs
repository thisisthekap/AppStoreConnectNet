/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Net.Client;
using AppStoreConnect.Net.Api;
// uncomment below to import models
//using AppStoreConnect.Net.Model;

namespace AppStoreConnect.Net.Test.Api
{
    /// <summary>
    ///  Class for testing GameCenterLeaderboardSetLocalizationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GameCenterLeaderboardSetLocalizationsApiTests : IDisposable
    {
        private GameCenterLeaderboardSetLocalizationsApi instance;

        public GameCenterLeaderboardSetLocalizationsApiTests()
        {
            instance = new GameCenterLeaderboardSetLocalizationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GameCenterLeaderboardSetLocalizationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' GameCenterLeaderboardSetLocalizationsApi
            //Assert.IsType<GameCenterLeaderboardSetLocalizationsApi>(instance);
        }

        /// <summary>
        /// Test GameCenterLeaderboardSetLocalizationsCreateInstance
        /// </summary>
        [Fact]
        public void GameCenterLeaderboardSetLocalizationsCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GameCenterLeaderboardSetLocalizationCreateRequest gameCenterLeaderboardSetLocalizationCreateRequest = null;
            //var response = instance.GameCenterLeaderboardSetLocalizationsCreateInstance(gameCenterLeaderboardSetLocalizationCreateRequest);
            //Assert.IsType<GameCenterLeaderboardSetLocalizationResponse>(response);
        }

        /// <summary>
        /// Test GameCenterLeaderboardSetLocalizationsDeleteInstance
        /// </summary>
        [Fact]
        public void GameCenterLeaderboardSetLocalizationsDeleteInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.GameCenterLeaderboardSetLocalizationsDeleteInstance(id);
        }

        /// <summary>
        /// Test GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelated
        /// </summary>
        [Fact]
        public void GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsGameCenterLeaderboardSetImages = null;
            //List<string>? fieldsGameCenterLeaderboardSetLocalizations = null;
            //List<string>? include = null;
            //var response = instance.GameCenterLeaderboardSetLocalizationsGameCenterLeaderboardSetImageGetToOneRelated(id, fieldsGameCenterLeaderboardSetImages, fieldsGameCenterLeaderboardSetLocalizations, include);
            //Assert.IsType<GameCenterLeaderboardSetImageResponse>(response);
        }

        /// <summary>
        /// Test GameCenterLeaderboardSetLocalizationsGetInstance
        /// </summary>
        [Fact]
        public void GameCenterLeaderboardSetLocalizationsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsGameCenterLeaderboardSetLocalizations = null;
            //List<string>? fieldsGameCenterLeaderboardSetImages = null;
            //List<string>? include = null;
            //var response = instance.GameCenterLeaderboardSetLocalizationsGetInstance(id, fieldsGameCenterLeaderboardSetLocalizations, fieldsGameCenterLeaderboardSetImages, include);
            //Assert.IsType<GameCenterLeaderboardSetLocalizationResponse>(response);
        }

        /// <summary>
        /// Test GameCenterLeaderboardSetLocalizationsUpdateInstance
        /// </summary>
        [Fact]
        public void GameCenterLeaderboardSetLocalizationsUpdateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //GameCenterLeaderboardSetLocalizationUpdateRequest gameCenterLeaderboardSetLocalizationUpdateRequest = null;
            //var response = instance.GameCenterLeaderboardSetLocalizationsUpdateInstance(id, gameCenterLeaderboardSetLocalizationUpdateRequest);
            //Assert.IsType<GameCenterLeaderboardSetLocalizationResponse>(response);
        }
    }
}
